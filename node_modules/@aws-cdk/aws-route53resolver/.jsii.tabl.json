{"version":"2","toolVersion":"1.84.0","snippets":{"7bdfc191d360c0e8ee5989d14ffd0c05cf1822f8c6190e5622a5807104c4df6d":{"translations":{"python":{"source":"block_list = route53resolver.FirewallDomainList(self, \"BlockList\",\n    domains=route53resolver.FirewallDomains.from_list([\"bad-domain.com\", \"bot-domain.net\"])\n)\n\ns3_list = route53resolver.FirewallDomainList(self, \"S3List\",\n    domains=route53resolver.FirewallDomains.from_s3_url(\"s3://bucket/prefix/object\")\n)\n\nasset_list = route53resolver.FirewallDomainList(self, \"AssetList\",\n    domains=route53resolver.FirewallDomains.from_asset(\"/path/to/domains.txt\")\n)","version":"2"},"csharp":{"source":"var blockList = new FirewallDomainList(this, \"BlockList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromList(new [] { \"bad-domain.com\", \"bot-domain.net\" })\n});\n\nvar s3List = new FirewallDomainList(this, \"S3List\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromS3Url(\"s3://bucket/prefix/object\")\n});\n\nvar assetList = new FirewallDomainList(this, \"AssetList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromAsset(\"/path/to/domains.txt\")\n});","version":"1"},"java":{"source":"FirewallDomainList blockList = FirewallDomainList.Builder.create(this, \"BlockList\")\n        .domains(FirewallDomains.fromList(List.of(\"bad-domain.com\", \"bot-domain.net\")))\n        .build();\n\nFirewallDomainList s3List = FirewallDomainList.Builder.create(this, \"S3List\")\n        .domains(FirewallDomains.fromS3Url(\"s3://bucket/prefix/object\"))\n        .build();\n\nFirewallDomainList assetList = FirewallDomainList.Builder.create(this, \"AssetList\")\n        .domains(FirewallDomains.fromAsset(\"/path/to/domains.txt\"))\n        .build();","version":"1"},"go":{"source":"blockList := route53resolver.NewFirewallDomainList(this, jsii.String(\"BlockList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromList([]*string{\n\t\tjsii.String(\"bad-domain.com\"),\n\t\tjsii.String(\"bot-domain.net\"),\n\t}),\n})\n\ns3List := route53resolver.NewFirewallDomainList(this, jsii.String(\"S3List\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromS3Url(jsii.String(\"s3://bucket/prefix/object\")),\n})\n\nassetList := route53resolver.NewFirewallDomainList(this, jsii.String(\"AssetList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromAsset(jsii.String(\"/path/to/domains.txt\")),\n})","version":"1"},"$":{"source":"const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-route53resolver"},"field":{"field":"markdown","line":39}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallDomainList","@aws-cdk/aws-route53resolver.FirewallDomainListProps","@aws-cdk/aws-route53resolver.FirewallDomains","@aws-cdk/aws-route53resolver.FirewallDomains#fromAsset","@aws-cdk/aws-route53resolver.FirewallDomains#fromList","@aws-cdk/aws-route53resolver.FirewallDomains#fromS3Url","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":7,"75":21,"104":3,"192":1,"193":3,"194":9,"196":3,"197":3,"225":3,"242":3,"243":3,"281":3},"fqnsFingerprint":"c7f6afe1f42c4a99f5d2c8f3e10340033ff88a867391fc7e010ff37aa4906222"},"7098dbec7c8eacf07040860a1b3bd515ace1e4ef83c41e1fc6af175ea33dccd6":{"translations":{"python":{"source":"# AWSManagedDomainsMalwareDomainList in us-east-1\nmalware_list = route53resolver.FirewallDomainList.from_firewall_domain_list_id(self, \"Malware\", \"rslvr-fdl-2c46f2ecbfec4dcc\")","version":"2"},"csharp":{"source":"// AWSManagedDomainsMalwareDomainList in us-east-1\nvar malwareList = FirewallDomainList.FromFirewallDomainListId(this, \"Malware\", \"rslvr-fdl-2c46f2ecbfec4dcc\");","version":"1"},"java":{"source":"// AWSManagedDomainsMalwareDomainList in us-east-1\nIFirewallDomainList malwareList = FirewallDomainList.fromFirewallDomainListId(this, \"Malware\", \"rslvr-fdl-2c46f2ecbfec4dcc\");","version":"1"},"go":{"source":"// AWSManagedDomainsMalwareDomainList in us-east-1\nmalwareList := route53resolver.FirewallDomainList_FromFirewallDomainListId(this, jsii.String(\"Malware\"), jsii.String(\"rslvr-fdl-2c46f2ecbfec4dcc\"))","version":"1"},"$":{"source":"// AWSManagedDomainsMalwareDomainList in us-east-1\nconst malwareList = route53resolver.FirewallDomainList.fromFirewallDomainListId(\n  this,\n  'Malware',\n  'rslvr-fdl-2c46f2ecbfec4dcc',\n);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-route53resolver"},"field":{"field":"markdown","line":57}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallDomainList","@aws-cdk/aws-route53resolver.FirewallDomainList#fromFirewallDomainListId","@aws-cdk/aws-route53resolver.IFirewallDomainList","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n// AWSManagedDomainsMalwareDomainList in us-east-1\nconst malwareList = route53resolver.FirewallDomainList.fromFirewallDomainListId(\n  this,\n  'Malware',\n  'rslvr-fdl-2c46f2ecbfec4dcc',\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":2,"75":4,"104":1,"194":2,"196":1,"225":1,"242":1,"243":1},"fqnsFingerprint":"0d8132db6923782bb21df4ca1a0c5c865b808dbb81e5da68bbae276ffbceb815"},"66f3f271dc0e1ad8da2416c5c6b350fc9ae6c70caa6c1f581807f3f48c55f435":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n\nroute53resolver.FirewallRuleGroup(self, \"RuleGroup\",\n    rules=[route53resolver.FirewallRule(\n        priority=10,\n        firewall_domain_list=my_block_list,\n        # block and reply with NODATA\n        action=route53resolver.FirewallRuleAction.block()\n    )\n    ]\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\n\nnew FirewallRuleGroup(this, \"RuleGroup\", new FirewallRuleGroupProps {\n    Rules = new [] { new FirewallRule {\n        Priority = 10,\n        FirewallDomainList = myBlockList,\n        // block and reply with NODATA\n        Action = FirewallRuleAction.Block()\n    } }\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\n\nFirewallRuleGroup.Builder.create(this, \"RuleGroup\")\n        .rules(List.of(FirewallRule.builder()\n                .priority(10)\n                .firewallDomainList(myBlockList)\n                // block and reply with NODATA\n                .action(FirewallRuleAction.block())\n                .build()))\n        .build();","version":"1"},"go":{"source":"var myBlockList firewallDomainList\n\nroute53resolver.NewFirewallRuleGroup(this, jsii.String(\"RuleGroup\"), &FirewallRuleGroupProps{\n\tRules: []firewallRule{\n\t\t&firewallRule{\n\t\t\tPriority: jsii.Number(10),\n\t\t\tFirewallDomainList: myBlockList,\n\t\t\t// block and reply with NODATA\n\t\t\tAction: route53resolver.FirewallRuleAction_Block(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-route53resolver"},"field":{"field":"markdown","line":70}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup","@aws-cdk/aws-route53resolver.FirewallRuleGroupProps","@aws-cdk/aws-route53resolver.IFirewallDomainList","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":1,"75":13,"104":1,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":4,"290":1},"fqnsFingerprint":"67a37db27f1e2b999289ff494619e51c0fdc764735e493e7d0fd18d07e28b132"},"0729fbdda447b9b4f20575b114702689dbb7ec90630da91fa1b2c06315975549":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n# rule_group: route53resolver.FirewallRuleGroup\n\n\nrule_group.add_rule(\n    priority=10,\n    firewall_domain_list=my_block_list,\n    # block and reply with NXDOMAIN\n    action=route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nx_domain())\n)\n\nrule_group.add_rule(\n    priority=20,\n    firewall_domain_list=my_block_list,\n    # block and override DNS response with a custom domain\n    action=route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override(\"amazon.com\"))\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\nFirewallRuleGroup ruleGroup;\n\n\nruleGroup.AddRule(new FirewallRule {\n    Priority = 10,\n    FirewallDomainList = myBlockList,\n    // block and reply with NXDOMAIN\n    Action = FirewallRuleAction.Block(DnsBlockResponse.NxDomain())\n});\n\nruleGroup.AddRule(new FirewallRule {\n    Priority = 20,\n    FirewallDomainList = myBlockList,\n    // block and override DNS response with a custom domain\n    Action = FirewallRuleAction.Block(DnsBlockResponse.Override(\"amazon.com\"))\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\nFirewallRuleGroup ruleGroup;\n\n\nruleGroup.addRule(FirewallRule.builder()\n        .priority(10)\n        .firewallDomainList(myBlockList)\n        // block and reply with NXDOMAIN\n        .action(FirewallRuleAction.block(DnsBlockResponse.nxDomain()))\n        .build());\n\nruleGroup.addRule(FirewallRule.builder()\n        .priority(20)\n        .firewallDomainList(myBlockList)\n        // block and override DNS response with a custom domain\n        .action(FirewallRuleAction.block(DnsBlockResponse.override(\"amazon.com\")))\n        .build());","version":"1"},"go":{"source":"var myBlockList firewallDomainList\nvar ruleGroup firewallRuleGroup\n\n\nruleGroup.AddRule(&FirewallRule{\n\tPriority: jsii.Number(10),\n\tFirewallDomainList: myBlockList,\n\t// block and reply with NXDOMAIN\n\tAction: route53resolver.FirewallRuleAction_Block(route53resolver.DnsBlockResponse_NxDomain()),\n})\n\nruleGroup.AddRule(&FirewallRule{\n\tPriority: jsii.Number(20),\n\tFirewallDomainList: myBlockList,\n\t// block and override DNS response with a custom domain\n\tAction: route53resolver.FirewallRuleAction_*Block(route53resolver.DnsBlockResponse_Override(jsii.String(\"amazon.com\"))),\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-route53resolver"},"field":{"field":"markdown","line":86}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.DnsBlockResponse","@aws-cdk/aws-route53resolver.DnsBlockResponse#nxDomain","@aws-cdk/aws-route53resolver.DnsBlockResponse#override","@aws-cdk/aws-route53resolver.FirewallRule","@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup#addRule","@aws-cdk/aws-route53resolver.IFirewallDomainList"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":2,"10":1,"75":30,"130":2,"153":2,"169":2,"193":2,"194":10,"196":6,"225":2,"226":2,"242":2,"243":2,"281":6,"290":1},"fqnsFingerprint":"a860f3b987dbe72d0acd7c4f01b74d0878eaac6029af7ae046b8f5f0dfda9d93"},"901453fef40e7ca68f437be4f501f716b1f4e591f159a1bd52cd2c2abf99f9f8":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n# rule_group: route53resolver.FirewallRuleGroup\n# my_vpc: ec2.Vpc\n\n\nrule_group.associate(\"Association\",\n    priority=101,\n    vpc=my_vpc\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\nFirewallRuleGroup ruleGroup;\nVpc myVpc;\n\n\nruleGroup.Associate(\"Association\", new FirewallRuleGroupAssociationOptions {\n    Priority = 101,\n    Vpc = myVpc\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\nFirewallRuleGroup ruleGroup;\nVpc myVpc;\n\n\nruleGroup.associate(\"Association\", FirewallRuleGroupAssociationOptions.builder()\n        .priority(101)\n        .vpc(myVpc)\n        .build());","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\nvar ruleGroup firewallRuleGroup\nvar myVpc vpc\n\n\nruleGroup.Associate(jsii.String(\"Association\"), &FirewallRuleGroupAssociationOptions{\n\tPriority: jsii.Number(101),\n\tVpc: myVpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\ndeclare const myVpc: ec2.Vpc;\n\nruleGroup.associate('Association', {\n  priority: 101,\n  vpc: myVpc,\n})","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-route53resolver"},"field":{"field":"markdown","line":107}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-route53resolver.FirewallRuleGroup#associate","@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nruleGroup.associate('Association', {\n  priority: 101,\n  vpc: myVpc,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":2,"75":12,"130":2,"153":2,"169":2,"193":1,"194":1,"196":1,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"db3ad3cb0849e2418055d353ba967451010e36d68284cc35e3e0df88f529071b"},"40908e78a03c7509089a8b6d6558f0aafce49631ba4f4cabc3440360cdbae072":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_firewall_domain_list = route53resolver.CfnFirewallDomainList(self, \"MyCfnFirewallDomainList\",\n    domain_file_url=\"domainFileUrl\",\n    domains=[\"domains\"],\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnFirewallDomainList = new CfnFirewallDomainList(this, \"MyCfnFirewallDomainList\", new CfnFirewallDomainListProps {\n    DomainFileUrl = \"domainFileUrl\",\n    Domains = new [] { \"domains\" },\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnFirewallDomainList cfnFirewallDomainList = CfnFirewallDomainList.Builder.create(this, \"MyCfnFirewallDomainList\")\n        .domainFileUrl(\"domainFileUrl\")\n        .domains(List.of(\"domains\"))\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnFirewallDomainList := route53resolver.NewCfnFirewallDomainList(this, jsii.String(\"MyCfnFirewallDomainList\"), &CfnFirewallDomainListProps{\n\tDomainFileUrl: jsii.String(\"domainFileUrl\"),\n\tDomains: []*string{\n\t\tjsii.String(\"domains\"),\n\t},\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallDomainList = new route53resolver.CfnFirewallDomainList(this, 'MyCfnFirewallDomainList', /* all optional props */ {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallDomainList"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallDomainList","@aws-cdk/aws-route53resolver.CfnFirewallDomainListProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFirewallDomainList = new route53resolver.CfnFirewallDomainList(this, 'MyCfnFirewallDomainList', /* all optional props */ {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":10,"104":1,"192":2,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"ede0016d061842df856f5f2b039bd975e5c2120e6d6bb4f885b759530a7d9f84"},"05a3cbe190a45235ca36164b7494b9aaddcebc8107a55b23332fbbe86af1f71e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_firewall_domain_list_props = route53resolver.CfnFirewallDomainListProps(\n    domain_file_url=\"domainFileUrl\",\n    domains=[\"domains\"],\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnFirewallDomainListProps = new CfnFirewallDomainListProps {\n    DomainFileUrl = \"domainFileUrl\",\n    Domains = new [] { \"domains\" },\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnFirewallDomainListProps cfnFirewallDomainListProps = CfnFirewallDomainListProps.builder()\n        .domainFileUrl(\"domainFileUrl\")\n        .domains(List.of(\"domains\"))\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnFirewallDomainListProps := &CfnFirewallDomainListProps{\n\tDomainFileUrl: jsii.String(\"domainFileUrl\"),\n\tDomains: []*string{\n\t\tjsii.String(\"domains\"),\n\t},\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallDomainListProps: route53resolver.CfnFirewallDomainListProps = {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallDomainListProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallDomainListProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFirewallDomainListProps: route53resolver.CfnFirewallDomainListProps = {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":1,"169":1,"192":2,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"9b972009f398f173f3a308c8df18a90c007766a68aecfc5931af9235079e9e80"},"d6c3e282de7898e23d690e400ce2edfd6d65c35509ef3b428b8ca63580b84c8a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_firewall_rule_group = route53resolver.CfnFirewallRuleGroup(self, \"MyCfnFirewallRuleGroup\",\n    firewall_rules=[route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty(\n        action=\"action\",\n        firewall_domain_list_id=\"firewallDomainListId\",\n        priority=123,\n\n        # the properties below are optional\n        block_override_dns_type=\"blockOverrideDnsType\",\n        block_override_domain=\"blockOverrideDomain\",\n        block_override_ttl=123,\n        block_response=\"blockResponse\"\n    )],\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnFirewallRuleGroup = new CfnFirewallRuleGroup(this, \"MyCfnFirewallRuleGroup\", new CfnFirewallRuleGroupProps {\n    FirewallRules = new [] { new FirewallRuleProperty {\n        Action = \"action\",\n        FirewallDomainListId = \"firewallDomainListId\",\n        Priority = 123,\n\n        // the properties below are optional\n        BlockOverrideDnsType = \"blockOverrideDnsType\",\n        BlockOverrideDomain = \"blockOverrideDomain\",\n        BlockOverrideTtl = 123,\n        BlockResponse = \"blockResponse\"\n    } },\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnFirewallRuleGroup cfnFirewallRuleGroup = CfnFirewallRuleGroup.Builder.create(this, \"MyCfnFirewallRuleGroup\")\n        .firewallRules(List.of(FirewallRuleProperty.builder()\n                .action(\"action\")\n                .firewallDomainListId(\"firewallDomainListId\")\n                .priority(123)\n\n                // the properties below are optional\n                .blockOverrideDnsType(\"blockOverrideDnsType\")\n                .blockOverrideDomain(\"blockOverrideDomain\")\n                .blockOverrideTtl(123)\n                .blockResponse(\"blockResponse\")\n                .build()))\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnFirewallRuleGroup := route53resolver.NewCfnFirewallRuleGroup(this, jsii.String(\"MyCfnFirewallRuleGroup\"), &CfnFirewallRuleGroupProps{\n\tFirewallRules: []interface{}{\n\t\t&FirewallRuleProperty{\n\t\t\tAction: jsii.String(\"action\"),\n\t\t\tFirewallDomainListId: jsii.String(\"firewallDomainListId\"),\n\t\t\tPriority: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tBlockOverrideDnsType: jsii.String(\"blockOverrideDnsType\"),\n\t\t\tBlockOverrideDomain: jsii.String(\"blockOverrideDomain\"),\n\t\t\tBlockOverrideTtl: jsii.Number(123),\n\t\t\tBlockResponse: jsii.String(\"blockResponse\"),\n\t\t},\n\t},\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroup = new route53resolver.CfnFirewallRuleGroup(this, 'MyCfnFirewallRuleGroup', /* all optional props */ {\n  firewallRules: [{\n    action: 'action',\n    firewallDomainListId: 'firewallDomainListId',\n    priority: 123,\n\n    // the properties below are optional\n    blockOverrideDnsType: 'blockOverrideDnsType',\n    blockOverrideDomain: 'blockOverrideDomain',\n    blockOverrideTtl: 123,\n    blockResponse: 'blockResponse',\n  }],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup","@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFirewallRuleGroup = new route53resolver.CfnFirewallRuleGroup(this, 'MyCfnFirewallRuleGroup', /* all optional props */ {\n  firewallRules: [{\n    action: 'action',\n    firewallDomainListId: 'firewallDomainListId',\n    priority: 123,\n\n    // the properties below are optional\n    blockOverrideDnsType: 'blockOverrideDnsType',\n    blockOverrideDomain: 'blockOverrideDomain',\n    blockOverrideTtl: 123,\n    blockResponse: 'blockResponse',\n  }],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":10,"75":16,"104":1,"192":2,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"c9b1cbd2c16e16ff9fceac5e90fd20b4010f78cc44a5ecb963581bebf275e2b9"},"b1b5d5d4026263a17de0441e6066978a0eb4ac7a0d84e7ca5f597e492305a88c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\nfirewall_rule_property = route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty(\n    action=\"action\",\n    firewall_domain_list_id=\"firewallDomainListId\",\n    priority=123,\n\n    # the properties below are optional\n    block_override_dns_type=\"blockOverrideDnsType\",\n    block_override_domain=\"blockOverrideDomain\",\n    block_override_ttl=123,\n    block_response=\"blockResponse\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar firewallRuleProperty = new FirewallRuleProperty {\n    Action = \"action\",\n    FirewallDomainListId = \"firewallDomainListId\",\n    Priority = 123,\n\n    // the properties below are optional\n    BlockOverrideDnsType = \"blockOverrideDnsType\",\n    BlockOverrideDomain = \"blockOverrideDomain\",\n    BlockOverrideTtl = 123,\n    BlockResponse = \"blockResponse\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nFirewallRuleProperty firewallRuleProperty = FirewallRuleProperty.builder()\n        .action(\"action\")\n        .firewallDomainListId(\"firewallDomainListId\")\n        .priority(123)\n\n        // the properties below are optional\n        .blockOverrideDnsType(\"blockOverrideDnsType\")\n        .blockOverrideDomain(\"blockOverrideDomain\")\n        .blockOverrideTtl(123)\n        .blockResponse(\"blockResponse\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\nfirewallRuleProperty := &FirewallRuleProperty{\n\tAction: jsii.String(\"action\"),\n\tFirewallDomainListId: jsii.String(\"firewallDomainListId\"),\n\tPriority: jsii.Number(123),\n\n\t// the properties below are optional\n\tBlockOverrideDnsType: jsii.String(\"blockOverrideDnsType\"),\n\tBlockOverrideDomain: jsii.String(\"blockOverrideDomain\"),\n\tBlockOverrideTtl: jsii.Number(123),\n\tBlockResponse: jsii.String(\"blockResponse\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst firewallRuleProperty: route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty = {\n  action: 'action',\n  firewallDomainListId: 'firewallDomainListId',\n  priority: 123,\n\n  // the properties below are optional\n  blockOverrideDnsType: 'blockOverrideDnsType',\n  blockOverrideDomain: 'blockOverrideDomain',\n  blockOverrideTtl: 123,\n  blockResponse: 'blockResponse',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst firewallRuleProperty: route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty = {\n  action: 'action',\n  firewallDomainListId: 'firewallDomainListId',\n  priority: 123,\n\n  // the properties below are optional\n  blockOverrideDnsType: 'blockOverrideDnsType',\n  blockOverrideDomain: 'blockOverrideDomain',\n  blockOverrideTtl: 123,\n  blockResponse: 'blockResponse',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":6,"75":12,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"fb882f2314a1e32eb454acdd3f28a7a2e62b381f1b9056f3b4fd0958c846285b"},"c2ed7a98a51ce61d939b246864b82d07bbea948a1788db2da372ee64b166a34d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_firewall_rule_group_association = route53resolver.CfnFirewallRuleGroupAssociation(self, \"MyCfnFirewallRuleGroupAssociation\",\n    firewall_rule_group_id=\"firewallRuleGroupId\",\n    priority=123,\n    vpc_id=\"vpcId\",\n\n    # the properties below are optional\n    mutation_protection=\"mutationProtection\",\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnFirewallRuleGroupAssociation = new CfnFirewallRuleGroupAssociation(this, \"MyCfnFirewallRuleGroupAssociation\", new CfnFirewallRuleGroupAssociationProps {\n    FirewallRuleGroupId = \"firewallRuleGroupId\",\n    Priority = 123,\n    VpcId = \"vpcId\",\n\n    // the properties below are optional\n    MutationProtection = \"mutationProtection\",\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnFirewallRuleGroupAssociation cfnFirewallRuleGroupAssociation = CfnFirewallRuleGroupAssociation.Builder.create(this, \"MyCfnFirewallRuleGroupAssociation\")\n        .firewallRuleGroupId(\"firewallRuleGroupId\")\n        .priority(123)\n        .vpcId(\"vpcId\")\n\n        // the properties below are optional\n        .mutationProtection(\"mutationProtection\")\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnFirewallRuleGroupAssociation := route53resolver.NewCfnFirewallRuleGroupAssociation(this, jsii.String(\"MyCfnFirewallRuleGroupAssociation\"), &CfnFirewallRuleGroupAssociationProps{\n\tFirewallRuleGroupId: jsii.String(\"firewallRuleGroupId\"),\n\tPriority: jsii.Number(123),\n\tVpcId: jsii.String(\"vpcId\"),\n\n\t// the properties below are optional\n\tMutationProtection: jsii.String(\"mutationProtection\"),\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroupAssociation = new route53resolver.CfnFirewallRuleGroupAssociation(this, 'MyCfnFirewallRuleGroupAssociation', {\n  firewallRuleGroupId: 'firewallRuleGroupId',\n  priority: 123,\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mutationProtection: 'mutationProtection',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociation","@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFirewallRuleGroupAssociation = new route53resolver.CfnFirewallRuleGroupAssociation(this, 'MyCfnFirewallRuleGroupAssociation', {\n  firewallRuleGroupId: 'firewallRuleGroupId',\n  priority: 123,\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mutationProtection: 'mutationProtection',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":8,"75":12,"104":1,"192":1,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"5233a7b3bf28bd3403843240c05c0b6f81931a95f5a4ebaf025c6f1da50b2c5b"},"856e47fc6766a7e2d216a6afb4985e1abaa086c7bd56681eab43f0dcacd65232":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_firewall_rule_group_association_props = route53resolver.CfnFirewallRuleGroupAssociationProps(\n    firewall_rule_group_id=\"firewallRuleGroupId\",\n    priority=123,\n    vpc_id=\"vpcId\",\n\n    # the properties below are optional\n    mutation_protection=\"mutationProtection\",\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnFirewallRuleGroupAssociationProps = new CfnFirewallRuleGroupAssociationProps {\n    FirewallRuleGroupId = \"firewallRuleGroupId\",\n    Priority = 123,\n    VpcId = \"vpcId\",\n\n    // the properties below are optional\n    MutationProtection = \"mutationProtection\",\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnFirewallRuleGroupAssociationProps cfnFirewallRuleGroupAssociationProps = CfnFirewallRuleGroupAssociationProps.builder()\n        .firewallRuleGroupId(\"firewallRuleGroupId\")\n        .priority(123)\n        .vpcId(\"vpcId\")\n\n        // the properties below are optional\n        .mutationProtection(\"mutationProtection\")\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnFirewallRuleGroupAssociationProps := &CfnFirewallRuleGroupAssociationProps{\n\tFirewallRuleGroupId: jsii.String(\"firewallRuleGroupId\"),\n\tPriority: jsii.Number(123),\n\tVpcId: jsii.String(\"vpcId\"),\n\n\t// the properties below are optional\n\tMutationProtection: jsii.String(\"mutationProtection\"),\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroupAssociationProps: route53resolver.CfnFirewallRuleGroupAssociationProps = {\n  firewallRuleGroupId: 'firewallRuleGroupId',\n  priority: 123,\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mutationProtection: 'mutationProtection',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFirewallRuleGroupAssociationProps: route53resolver.CfnFirewallRuleGroupAssociationProps = {\n  firewallRuleGroupId: 'firewallRuleGroupId',\n  priority: 123,\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mutationProtection: 'mutationProtection',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":7,"75":12,"153":1,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"d5102bc8a748345591ee9cbb086568fb8304c6ff9530d7f0adafcb5aa0514167"},"9b124dc519c10a0c73a69680d76881990887309241181e71e388dfbd71e7cdd6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_firewall_rule_group_props = route53resolver.CfnFirewallRuleGroupProps(\n    firewall_rules=[route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty(\n        action=\"action\",\n        firewall_domain_list_id=\"firewallDomainListId\",\n        priority=123,\n\n        # the properties below are optional\n        block_override_dns_type=\"blockOverrideDnsType\",\n        block_override_domain=\"blockOverrideDomain\",\n        block_override_ttl=123,\n        block_response=\"blockResponse\"\n    )],\n    name=\"name\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnFirewallRuleGroupProps = new CfnFirewallRuleGroupProps {\n    FirewallRules = new [] { new FirewallRuleProperty {\n        Action = \"action\",\n        FirewallDomainListId = \"firewallDomainListId\",\n        Priority = 123,\n\n        // the properties below are optional\n        BlockOverrideDnsType = \"blockOverrideDnsType\",\n        BlockOverrideDomain = \"blockOverrideDomain\",\n        BlockOverrideTtl = 123,\n        BlockResponse = \"blockResponse\"\n    } },\n    Name = \"name\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnFirewallRuleGroupProps cfnFirewallRuleGroupProps = CfnFirewallRuleGroupProps.builder()\n        .firewallRules(List.of(FirewallRuleProperty.builder()\n                .action(\"action\")\n                .firewallDomainListId(\"firewallDomainListId\")\n                .priority(123)\n\n                // the properties below are optional\n                .blockOverrideDnsType(\"blockOverrideDnsType\")\n                .blockOverrideDomain(\"blockOverrideDomain\")\n                .blockOverrideTtl(123)\n                .blockResponse(\"blockResponse\")\n                .build()))\n        .name(\"name\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnFirewallRuleGroupProps := &CfnFirewallRuleGroupProps{\n\tFirewallRules: []interface{}{\n\t\t&FirewallRuleProperty{\n\t\t\tAction: jsii.String(\"action\"),\n\t\t\tFirewallDomainListId: jsii.String(\"firewallDomainListId\"),\n\t\t\tPriority: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tBlockOverrideDnsType: jsii.String(\"blockOverrideDnsType\"),\n\t\t\tBlockOverrideDomain: jsii.String(\"blockOverrideDomain\"),\n\t\t\tBlockOverrideTtl: jsii.Number(123),\n\t\t\tBlockResponse: jsii.String(\"blockResponse\"),\n\t\t},\n\t},\n\tName: jsii.String(\"name\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroupProps: route53resolver.CfnFirewallRuleGroupProps = {\n  firewallRules: [{\n    action: 'action',\n    firewallDomainListId: 'firewallDomainListId',\n    priority: 123,\n\n    // the properties below are optional\n    blockOverrideDnsType: 'blockOverrideDnsType',\n    blockOverrideDomain: 'blockOverrideDomain',\n    blockOverrideTtl: 123,\n    blockResponse: 'blockResponse',\n  }],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnFirewallRuleGroupProps: route53resolver.CfnFirewallRuleGroupProps = {\n  firewallRules: [{\n    action: 'action',\n    firewallDomainListId: 'firewallDomainListId',\n    priority: 123,\n\n    // the properties below are optional\n    blockOverrideDnsType: 'blockOverrideDnsType',\n    blockOverrideDomain: 'blockOverrideDomain',\n    blockOverrideTtl: 123,\n    blockResponse: 'blockResponse',\n  }],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":9,"75":16,"153":1,"169":1,"192":2,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"4170daf671d834157b75ccbdaba5f682a1e01309e013d46849f46388a138ce3e"},"f72f016ed6a6eb6709cc38c4475d9d9a76607b7308e1bdf072ed598b1e48a027":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_config = route53resolver.CfnResolverConfig(self, \"MyCfnResolverConfig\",\n    autodefined_reverse_flag=\"autodefinedReverseFlag\",\n    resource_id=\"resourceId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverConfig = new CfnResolverConfig(this, \"MyCfnResolverConfig\", new CfnResolverConfigProps {\n    AutodefinedReverseFlag = \"autodefinedReverseFlag\",\n    ResourceId = \"resourceId\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverConfig cfnResolverConfig = CfnResolverConfig.Builder.create(this, \"MyCfnResolverConfig\")\n        .autodefinedReverseFlag(\"autodefinedReverseFlag\")\n        .resourceId(\"resourceId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverConfig := route53resolver.NewCfnResolverConfig(this, jsii.String(\"MyCfnResolverConfig\"), &CfnResolverConfigProps{\n\tAutodefinedReverseFlag: jsii.String(\"autodefinedReverseFlag\"),\n\tResourceId: jsii.String(\"resourceId\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverConfig = new route53resolver.CfnResolverConfig(this, 'MyCfnResolverConfig', {\n  autodefinedReverseFlag: 'autodefinedReverseFlag',\n  resourceId: 'resourceId',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverConfig","@aws-cdk/aws-route53resolver.CfnResolverConfigProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverConfig = new route53resolver.CfnResolverConfig(this, 'MyCfnResolverConfig', {\n  autodefinedReverseFlag: 'autodefinedReverseFlag',\n  resourceId: 'resourceId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"1abaeb88f726dac0bbbd5c5a5ca7458b4aa5e7b64987f748b80790bb50733e35"},"a64c3fe658fe3ed409685f9109d015db8494ce2666818c5ec668abe7bffe8230":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_config_props = route53resolver.CfnResolverConfigProps(\n    autodefined_reverse_flag=\"autodefinedReverseFlag\",\n    resource_id=\"resourceId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverConfigProps = new CfnResolverConfigProps {\n    AutodefinedReverseFlag = \"autodefinedReverseFlag\",\n    ResourceId = \"resourceId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverConfigProps cfnResolverConfigProps = CfnResolverConfigProps.builder()\n        .autodefinedReverseFlag(\"autodefinedReverseFlag\")\n        .resourceId(\"resourceId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverConfigProps := &CfnResolverConfigProps{\n\tAutodefinedReverseFlag: jsii.String(\"autodefinedReverseFlag\"),\n\tResourceId: jsii.String(\"resourceId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverConfigProps: route53resolver.CfnResolverConfigProps = {\n  autodefinedReverseFlag: 'autodefinedReverseFlag',\n  resourceId: 'resourceId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverConfigProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverConfigProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverConfigProps: route53resolver.CfnResolverConfigProps = {\n  autodefinedReverseFlag: 'autodefinedReverseFlag',\n  resourceId: 'resourceId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"01372689f17b83d8051d36966b544ca4ca0aba393b27184283adcf1e2a1d21b6"},"21269f625a7f53869ab7f49fa60a8f0a04c2925685e5c6468f35a9c601709187":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_dNSSECConfig = route53resolver.CfnResolverDNSSECConfig(self, \"MyCfnResolverDNSSECConfig\",\n    resource_id=\"resourceId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverDNSSECConfig = new CfnResolverDNSSECConfig(this, \"MyCfnResolverDNSSECConfig\", new CfnResolverDNSSECConfigProps {\n    ResourceId = \"resourceId\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverDNSSECConfig cfnResolverDNSSECConfig = CfnResolverDNSSECConfig.Builder.create(this, \"MyCfnResolverDNSSECConfig\")\n        .resourceId(\"resourceId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverDNSSECConfig := route53resolver.NewCfnResolverDNSSECConfig(this, jsii.String(\"MyCfnResolverDNSSECConfig\"), &CfnResolverDNSSECConfigProps{\n\tResourceId: jsii.String(\"resourceId\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverDNSSECConfig = new route53resolver.CfnResolverDNSSECConfig(this, 'MyCfnResolverDNSSECConfig', /* all optional props */ {\n  resourceId: 'resourceId',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfig","@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfigProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverDNSSECConfig = new route53resolver.CfnResolverDNSSECConfig(this, 'MyCfnResolverDNSSECConfig', /* all optional props */ {\n  resourceId: 'resourceId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":5,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"853ae14bb549ae89e82859e50d9b0b2b244daac8da7dee108d250d73ec4f0499"},"202b90b043ba4ebd6b44688a4fd19bef214c10d98dd4b634986f12ddcc86637e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_dNSSECConfig_props = route53resolver.CfnResolverDNSSECConfigProps(\n    resource_id=\"resourceId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverDNSSECConfigProps = new CfnResolverDNSSECConfigProps {\n    ResourceId = \"resourceId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverDNSSECConfigProps cfnResolverDNSSECConfigProps = CfnResolverDNSSECConfigProps.builder()\n        .resourceId(\"resourceId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverDNSSECConfigProps := &CfnResolverDNSSECConfigProps{\n\tResourceId: jsii.String(\"resourceId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverDNSSECConfigProps: route53resolver.CfnResolverDNSSECConfigProps = {\n  resourceId: 'resourceId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfigProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfigProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverDNSSECConfigProps: route53resolver.CfnResolverDNSSECConfigProps = {\n  resourceId: 'resourceId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":5,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"827fb0913f4eeb32b33d86297d2e4b70c98b95045f909825998324db9b411d13"},"2dae22895b32eb1bcaed321c5725feb1827dc6f73f9dc66a0983dc710f4b08e9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_endpoint = route53resolver.CfnResolverEndpoint(self, \"MyCfnResolverEndpoint\",\n    direction=\"direction\",\n    ip_addresses=[route53resolver.CfnResolverEndpoint.IpAddressRequestProperty(\n        subnet_id=\"subnetId\",\n\n        # the properties below are optional\n        ip=\"ip\",\n        ipv6=\"ipv6\"\n    )],\n    security_group_ids=[\"securityGroupIds\"],\n\n    # the properties below are optional\n    name=\"name\",\n    outpost_arn=\"outpostArn\",\n    preferred_instance_type=\"preferredInstanceType\",\n    resolver_endpoint_type=\"resolverEndpointType\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverEndpoint = new CfnResolverEndpoint(this, \"MyCfnResolverEndpoint\", new CfnResolverEndpointProps {\n    Direction = \"direction\",\n    IpAddresses = new [] { new IpAddressRequestProperty {\n        SubnetId = \"subnetId\",\n\n        // the properties below are optional\n        Ip = \"ip\",\n        Ipv6 = \"ipv6\"\n    } },\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n\n    // the properties below are optional\n    Name = \"name\",\n    OutpostArn = \"outpostArn\",\n    PreferredInstanceType = \"preferredInstanceType\",\n    ResolverEndpointType = \"resolverEndpointType\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverEndpoint cfnResolverEndpoint = CfnResolverEndpoint.Builder.create(this, \"MyCfnResolverEndpoint\")\n        .direction(\"direction\")\n        .ipAddresses(List.of(IpAddressRequestProperty.builder()\n                .subnetId(\"subnetId\")\n\n                // the properties below are optional\n                .ip(\"ip\")\n                .ipv6(\"ipv6\")\n                .build()))\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n\n        // the properties below are optional\n        .name(\"name\")\n        .outpostArn(\"outpostArn\")\n        .preferredInstanceType(\"preferredInstanceType\")\n        .resolverEndpointType(\"resolverEndpointType\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverEndpoint := route53resolver.NewCfnResolverEndpoint(this, jsii.String(\"MyCfnResolverEndpoint\"), &CfnResolverEndpointProps{\n\tDirection: jsii.String(\"direction\"),\n\tIpAddresses: []interface{}{\n\t\t&IpAddressRequestProperty{\n\t\t\tSubnetId: jsii.String(\"subnetId\"),\n\n\t\t\t// the properties below are optional\n\t\t\tIp: jsii.String(\"ip\"),\n\t\t\tIpv6: jsii.String(\"ipv6\"),\n\t\t},\n\t},\n\tSecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n\tOutpostArn: jsii.String(\"outpostArn\"),\n\tPreferredInstanceType: jsii.String(\"preferredInstanceType\"),\n\tResolverEndpointType: jsii.String(\"resolverEndpointType\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverEndpoint = new route53resolver.CfnResolverEndpoint(this, 'MyCfnResolverEndpoint', {\n  direction: 'direction',\n  ipAddresses: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    ip: 'ip',\n    ipv6: 'ipv6',\n  }],\n  securityGroupIds: ['securityGroupIds'],\n\n  // the properties below are optional\n  name: 'name',\n  outpostArn: 'outpostArn',\n  preferredInstanceType: 'preferredInstanceType',\n  resolverEndpointType: 'resolverEndpointType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverEndpoint"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverEndpoint","@aws-cdk/aws-route53resolver.CfnResolverEndpointProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverEndpoint = new route53resolver.CfnResolverEndpoint(this, 'MyCfnResolverEndpoint', {\n  direction: 'direction',\n  ipAddresses: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    ip: 'ip',\n    ipv6: 'ipv6',\n  }],\n  securityGroupIds: ['securityGroupIds'],\n\n  // the properties below are optional\n  name: 'name',\n  outpostArn: 'outpostArn',\n  preferredInstanceType: 'preferredInstanceType',\n  resolverEndpointType: 'resolverEndpointType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":13,"75":17,"104":1,"192":3,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"ce155d42c1bbf0ea60b2cfe5b7aa4f66e279adef8de1f32080ffbcef29b1dd68"},"045dc5cc88776231d16eebc9b7ac5b65a63d5fdc5eb02c2cbbb047fe655580dd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\nip_address_request_property = route53resolver.CfnResolverEndpoint.IpAddressRequestProperty(\n    subnet_id=\"subnetId\",\n\n    # the properties below are optional\n    ip=\"ip\",\n    ipv6=\"ipv6\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar ipAddressRequestProperty = new IpAddressRequestProperty {\n    SubnetId = \"subnetId\",\n\n    // the properties below are optional\n    Ip = \"ip\",\n    Ipv6 = \"ipv6\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nIpAddressRequestProperty ipAddressRequestProperty = IpAddressRequestProperty.builder()\n        .subnetId(\"subnetId\")\n\n        // the properties below are optional\n        .ip(\"ip\")\n        .ipv6(\"ipv6\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\nipAddressRequestProperty := &IpAddressRequestProperty{\n\tSubnetId: jsii.String(\"subnetId\"),\n\n\t// the properties below are optional\n\tIp: jsii.String(\"ip\"),\n\tIpv6: jsii.String(\"ipv6\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst ipAddressRequestProperty: route53resolver.CfnResolverEndpoint.IpAddressRequestProperty = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  ip: 'ip',\n  ipv6: 'ipv6',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverEndpoint.IpAddressRequestProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverEndpoint.IpAddressRequestProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ipAddressRequestProperty: route53resolver.CfnResolverEndpoint.IpAddressRequestProperty = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  ip: 'ip',\n  ipv6: 'ipv6',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"87d332b0923300f7e6e056269e49711ae59812b7b76b667ffb7ed78b944ccb13"},"6b1e088213edd30e7e47a7a4083f64ebda06097fa69ba3ca47c4f6d9ebe2203f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_endpoint_props = route53resolver.CfnResolverEndpointProps(\n    direction=\"direction\",\n    ip_addresses=[route53resolver.CfnResolverEndpoint.IpAddressRequestProperty(\n        subnet_id=\"subnetId\",\n\n        # the properties below are optional\n        ip=\"ip\",\n        ipv6=\"ipv6\"\n    )],\n    security_group_ids=[\"securityGroupIds\"],\n\n    # the properties below are optional\n    name=\"name\",\n    outpost_arn=\"outpostArn\",\n    preferred_instance_type=\"preferredInstanceType\",\n    resolver_endpoint_type=\"resolverEndpointType\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverEndpointProps = new CfnResolverEndpointProps {\n    Direction = \"direction\",\n    IpAddresses = new [] { new IpAddressRequestProperty {\n        SubnetId = \"subnetId\",\n\n        // the properties below are optional\n        Ip = \"ip\",\n        Ipv6 = \"ipv6\"\n    } },\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n\n    // the properties below are optional\n    Name = \"name\",\n    OutpostArn = \"outpostArn\",\n    PreferredInstanceType = \"preferredInstanceType\",\n    ResolverEndpointType = \"resolverEndpointType\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverEndpointProps cfnResolverEndpointProps = CfnResolverEndpointProps.builder()\n        .direction(\"direction\")\n        .ipAddresses(List.of(IpAddressRequestProperty.builder()\n                .subnetId(\"subnetId\")\n\n                // the properties below are optional\n                .ip(\"ip\")\n                .ipv6(\"ipv6\")\n                .build()))\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n\n        // the properties below are optional\n        .name(\"name\")\n        .outpostArn(\"outpostArn\")\n        .preferredInstanceType(\"preferredInstanceType\")\n        .resolverEndpointType(\"resolverEndpointType\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverEndpointProps := &CfnResolverEndpointProps{\n\tDirection: jsii.String(\"direction\"),\n\tIpAddresses: []interface{}{\n\t\t&IpAddressRequestProperty{\n\t\t\tSubnetId: jsii.String(\"subnetId\"),\n\n\t\t\t// the properties below are optional\n\t\t\tIp: jsii.String(\"ip\"),\n\t\t\tIpv6: jsii.String(\"ipv6\"),\n\t\t},\n\t},\n\tSecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n\tOutpostArn: jsii.String(\"outpostArn\"),\n\tPreferredInstanceType: jsii.String(\"preferredInstanceType\"),\n\tResolverEndpointType: jsii.String(\"resolverEndpointType\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverEndpointProps: route53resolver.CfnResolverEndpointProps = {\n  direction: 'direction',\n  ipAddresses: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    ip: 'ip',\n    ipv6: 'ipv6',\n  }],\n  securityGroupIds: ['securityGroupIds'],\n\n  // the properties below are optional\n  name: 'name',\n  outpostArn: 'outpostArn',\n  preferredInstanceType: 'preferredInstanceType',\n  resolverEndpointType: 'resolverEndpointType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverEndpointProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverEndpointProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverEndpointProps: route53resolver.CfnResolverEndpointProps = {\n  direction: 'direction',\n  ipAddresses: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    ip: 'ip',\n    ipv6: 'ipv6',\n  }],\n  securityGroupIds: ['securityGroupIds'],\n\n  // the properties below are optional\n  name: 'name',\n  outpostArn: 'outpostArn',\n  preferredInstanceType: 'preferredInstanceType',\n  resolverEndpointType: 'resolverEndpointType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":12,"75":17,"153":1,"169":1,"192":3,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"88c505b2d755d8cdbd224c835f46f8291248600e668c3bb26011859ecfdeea0d"},"fd53115cc757150f5d88a5abbb6e19633328e69ac8f48b12db5d21c26f014fde":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_query_logging_config = route53resolver.CfnResolverQueryLoggingConfig(self, \"MyCfnResolverQueryLoggingConfig\",\n    destination_arn=\"destinationArn\",\n    name=\"name\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverQueryLoggingConfig = new CfnResolverQueryLoggingConfig(this, \"MyCfnResolverQueryLoggingConfig\", new CfnResolverQueryLoggingConfigProps {\n    DestinationArn = \"destinationArn\",\n    Name = \"name\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverQueryLoggingConfig cfnResolverQueryLoggingConfig = CfnResolverQueryLoggingConfig.Builder.create(this, \"MyCfnResolverQueryLoggingConfig\")\n        .destinationArn(\"destinationArn\")\n        .name(\"name\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverQueryLoggingConfig := route53resolver.NewCfnResolverQueryLoggingConfig(this, jsii.String(\"MyCfnResolverQueryLoggingConfig\"), &CfnResolverQueryLoggingConfigProps{\n\tDestinationArn: jsii.String(\"destinationArn\"),\n\tName: jsii.String(\"name\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfig = new route53resolver.CfnResolverQueryLoggingConfig(this, 'MyCfnResolverQueryLoggingConfig', /* all optional props */ {\n  destinationArn: 'destinationArn',\n  name: 'name',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfig","@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverQueryLoggingConfig = new route53resolver.CfnResolverQueryLoggingConfig(this, 'MyCfnResolverQueryLoggingConfig', /* all optional props */ {\n  destinationArn: 'destinationArn',\n  name: 'name',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"4f9092e17827193bc6926d886b58a413cd418305941df94b35cfb0601b106ae0"},"b7862139685e9fbd8941588d92a4b083c4cfbefce8dc04eaaf431ffc7269431a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_query_logging_config_association = route53resolver.CfnResolverQueryLoggingConfigAssociation(self, \"MyCfnResolverQueryLoggingConfigAssociation\",\n    resolver_query_log_config_id=\"resolverQueryLogConfigId\",\n    resource_id=\"resourceId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverQueryLoggingConfigAssociation = new CfnResolverQueryLoggingConfigAssociation(this, \"MyCfnResolverQueryLoggingConfigAssociation\", new CfnResolverQueryLoggingConfigAssociationProps {\n    ResolverQueryLogConfigId = \"resolverQueryLogConfigId\",\n    ResourceId = \"resourceId\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverQueryLoggingConfigAssociation cfnResolverQueryLoggingConfigAssociation = CfnResolverQueryLoggingConfigAssociation.Builder.create(this, \"MyCfnResolverQueryLoggingConfigAssociation\")\n        .resolverQueryLogConfigId(\"resolverQueryLogConfigId\")\n        .resourceId(\"resourceId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverQueryLoggingConfigAssociation := route53resolver.NewCfnResolverQueryLoggingConfigAssociation(this, jsii.String(\"MyCfnResolverQueryLoggingConfigAssociation\"), &CfnResolverQueryLoggingConfigAssociationProps{\n\tResolverQueryLogConfigId: jsii.String(\"resolverQueryLogConfigId\"),\n\tResourceId: jsii.String(\"resourceId\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfigAssociation = new route53resolver.CfnResolverQueryLoggingConfigAssociation(this, 'MyCfnResolverQueryLoggingConfigAssociation', /* all optional props */ {\n  resolverQueryLogConfigId: 'resolverQueryLogConfigId',\n  resourceId: 'resourceId',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociation","@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverQueryLoggingConfigAssociation = new route53resolver.CfnResolverQueryLoggingConfigAssociation(this, 'MyCfnResolverQueryLoggingConfigAssociation', /* all optional props */ {\n  resolverQueryLogConfigId: 'resolverQueryLogConfigId',\n  resourceId: 'resourceId',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":6,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b0a8171be7ab5b6b615ab5b5a0b626862fd6d39e2b0ead825aa367fe90e0bd79"},"f47861aaa9a2ef0b5d0e22136eb059ce1ee7b0cdd76c33a9763bdeb9429eacb2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_query_logging_config_association_props = route53resolver.CfnResolverQueryLoggingConfigAssociationProps(\n    resolver_query_log_config_id=\"resolverQueryLogConfigId\",\n    resource_id=\"resourceId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverQueryLoggingConfigAssociationProps = new CfnResolverQueryLoggingConfigAssociationProps {\n    ResolverQueryLogConfigId = \"resolverQueryLogConfigId\",\n    ResourceId = \"resourceId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverQueryLoggingConfigAssociationProps cfnResolverQueryLoggingConfigAssociationProps = CfnResolverQueryLoggingConfigAssociationProps.builder()\n        .resolverQueryLogConfigId(\"resolverQueryLogConfigId\")\n        .resourceId(\"resourceId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverQueryLoggingConfigAssociationProps := &CfnResolverQueryLoggingConfigAssociationProps{\n\tResolverQueryLogConfigId: jsii.String(\"resolverQueryLogConfigId\"),\n\tResourceId: jsii.String(\"resourceId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfigAssociationProps: route53resolver.CfnResolverQueryLoggingConfigAssociationProps = {\n  resolverQueryLogConfigId: 'resolverQueryLogConfigId',\n  resourceId: 'resourceId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverQueryLoggingConfigAssociationProps: route53resolver.CfnResolverQueryLoggingConfigAssociationProps = {\n  resolverQueryLogConfigId: 'resolverQueryLogConfigId',\n  resourceId: 'resourceId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"a089f8d0e493c385715164025b316d6b7c870cdb86913766fefa98c6faa36f53"},"d1ec6c095af401311646380b6d3aff92d4f934f6c5aefd1f572d45872fb31b64":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_query_logging_config_props = route53resolver.CfnResolverQueryLoggingConfigProps(\n    destination_arn=\"destinationArn\",\n    name=\"name\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverQueryLoggingConfigProps = new CfnResolverQueryLoggingConfigProps {\n    DestinationArn = \"destinationArn\",\n    Name = \"name\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverQueryLoggingConfigProps cfnResolverQueryLoggingConfigProps = CfnResolverQueryLoggingConfigProps.builder()\n        .destinationArn(\"destinationArn\")\n        .name(\"name\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverQueryLoggingConfigProps := &CfnResolverQueryLoggingConfigProps{\n\tDestinationArn: jsii.String(\"destinationArn\"),\n\tName: jsii.String(\"name\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfigProps: route53resolver.CfnResolverQueryLoggingConfigProps = {\n  destinationArn: 'destinationArn',\n  name: 'name',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverQueryLoggingConfigProps: route53resolver.CfnResolverQueryLoggingConfigProps = {\n  destinationArn: 'destinationArn',\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"b8cb1075ff505c4b5c6b85cc89d878425114584956d160118fbc9d1b62a1da27"},"77090cd9d69cbf4d104a556b39df940cd7fb6d6ac88ddee7764fd9d034c3e303":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_rule = route53resolver.CfnResolverRule(self, \"MyCfnResolverRule\",\n    domain_name=\"domainName\",\n    rule_type=\"ruleType\",\n\n    # the properties below are optional\n    name=\"name\",\n    resolver_endpoint_id=\"resolverEndpointId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_ips=[route53resolver.CfnResolverRule.TargetAddressProperty(\n        ip=\"ip\",\n        ipv6=\"ipv6\",\n        port=\"port\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverRule = new CfnResolverRule(this, \"MyCfnResolverRule\", new CfnResolverRuleProps {\n    DomainName = \"domainName\",\n    RuleType = \"ruleType\",\n\n    // the properties below are optional\n    Name = \"name\",\n    ResolverEndpointId = \"resolverEndpointId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetIps = new [] { new TargetAddressProperty {\n        Ip = \"ip\",\n        Ipv6 = \"ipv6\",\n        Port = \"port\"\n    } }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverRule cfnResolverRule = CfnResolverRule.Builder.create(this, \"MyCfnResolverRule\")\n        .domainName(\"domainName\")\n        .ruleType(\"ruleType\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .resolverEndpointId(\"resolverEndpointId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetIps(List.of(TargetAddressProperty.builder()\n                .ip(\"ip\")\n                .ipv6(\"ipv6\")\n                .port(\"port\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverRule := route53resolver.NewCfnResolverRule(this, jsii.String(\"MyCfnResolverRule\"), &CfnResolverRuleProps{\n\tDomainName: jsii.String(\"domainName\"),\n\tRuleType: jsii.String(\"ruleType\"),\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n\tResolverEndpointId: jsii.String(\"resolverEndpointId\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tTargetIps: []interface{}{\n\t\t&TargetAddressProperty{\n\t\t\tIp: jsii.String(\"ip\"),\n\t\t\tIpv6: jsii.String(\"ipv6\"),\n\t\t\tPort: jsii.String(\"port\"),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRule = new route53resolver.CfnResolverRule(this, 'MyCfnResolverRule', {\n  domainName: 'domainName',\n  ruleType: 'ruleType',\n\n  // the properties below are optional\n  name: 'name',\n  resolverEndpointId: 'resolverEndpointId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetIps: [{\n    ip: 'ip',\n    ipv6: 'ipv6',\n    port: 'port',\n  }],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverRule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverRule","@aws-cdk/aws-route53resolver.CfnResolverRuleProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverRule = new route53resolver.CfnResolverRule(this, 'MyCfnResolverRule', {\n  domainName: 'domainName',\n  ruleType: 'ruleType',\n\n  // the properties below are optional\n  name: 'name',\n  resolverEndpointId: 'resolverEndpointId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetIps: [{\n    ip: 'ip',\n    ipv6: 'ipv6',\n    port: 'port',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":11,"75":15,"104":1,"192":2,"193":3,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"7a0e4886792b8fad752942e9484577658a3e19804fd20cfae0ebe8b358979265"},"8165e2257367f4fcbd919d50dc57ff46e24ddbc1a4a7bbfa609842dcc53e519e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ntarget_address_property = route53resolver.CfnResolverRule.TargetAddressProperty(\n    ip=\"ip\",\n    ipv6=\"ipv6\",\n    port=\"port\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar targetAddressProperty = new TargetAddressProperty {\n    Ip = \"ip\",\n    Ipv6 = \"ipv6\",\n    Port = \"port\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nTargetAddressProperty targetAddressProperty = TargetAddressProperty.builder()\n        .ip(\"ip\")\n        .ipv6(\"ipv6\")\n        .port(\"port\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ntargetAddressProperty := &TargetAddressProperty{\n\tIp: jsii.String(\"ip\"),\n\tIpv6: jsii.String(\"ipv6\"),\n\tPort: jsii.String(\"port\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst targetAddressProperty: route53resolver.CfnResolverRule.TargetAddressProperty = {\n  ip: 'ip',\n  ipv6: 'ipv6',\n  port: 'port',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverRule.TargetAddressProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverRule.TargetAddressProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetAddressProperty: route53resolver.CfnResolverRule.TargetAddressProperty = {\n  ip: 'ip',\n  ipv6: 'ipv6',\n  port: 'port',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":8,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"99a4ba4079fcc1817e91a724f87831239ddb23401488561dea7489fee66b4d44"},"fb79e036cef9488e07ebd74c44ec089779cad97a0277ccedcc3fe54f8f138ae0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_rule_association = route53resolver.CfnResolverRuleAssociation(self, \"MyCfnResolverRuleAssociation\",\n    resolver_rule_id=\"resolverRuleId\",\n    vpc_id=\"vpcId\",\n\n    # the properties below are optional\n    name=\"name\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverRuleAssociation = new CfnResolverRuleAssociation(this, \"MyCfnResolverRuleAssociation\", new CfnResolverRuleAssociationProps {\n    ResolverRuleId = \"resolverRuleId\",\n    VpcId = \"vpcId\",\n\n    // the properties below are optional\n    Name = \"name\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverRuleAssociation cfnResolverRuleAssociation = CfnResolverRuleAssociation.Builder.create(this, \"MyCfnResolverRuleAssociation\")\n        .resolverRuleId(\"resolverRuleId\")\n        .vpcId(\"vpcId\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverRuleAssociation := route53resolver.NewCfnResolverRuleAssociation(this, jsii.String(\"MyCfnResolverRuleAssociation\"), &CfnResolverRuleAssociationProps{\n\tResolverRuleId: jsii.String(\"resolverRuleId\"),\n\tVpcId: jsii.String(\"vpcId\"),\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRuleAssociation = new route53resolver.CfnResolverRuleAssociation(this, 'MyCfnResolverRuleAssociation', {\n  resolverRuleId: 'resolverRuleId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  name: 'name',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverRuleAssociation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverRuleAssociation","@aws-cdk/aws-route53resolver.CfnResolverRuleAssociationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverRuleAssociation = new route53resolver.CfnResolverRuleAssociation(this, 'MyCfnResolverRuleAssociation', {\n  resolverRuleId: 'resolverRuleId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  name: 'name',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"75f4437d0d6c6b2f9188d3b1a3d1210a417521b6d4d9fcbfa8ccfed77240c733"},"3f2ea4b29000b29d0f83ce737102d1461bcf6beceb37d04242af7219424aca25":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_rule_association_props = route53resolver.CfnResolverRuleAssociationProps(\n    resolver_rule_id=\"resolverRuleId\",\n    vpc_id=\"vpcId\",\n\n    # the properties below are optional\n    name=\"name\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverRuleAssociationProps = new CfnResolverRuleAssociationProps {\n    ResolverRuleId = \"resolverRuleId\",\n    VpcId = \"vpcId\",\n\n    // the properties below are optional\n    Name = \"name\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverRuleAssociationProps cfnResolverRuleAssociationProps = CfnResolverRuleAssociationProps.builder()\n        .resolverRuleId(\"resolverRuleId\")\n        .vpcId(\"vpcId\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverRuleAssociationProps := &CfnResolverRuleAssociationProps{\n\tResolverRuleId: jsii.String(\"resolverRuleId\"),\n\tVpcId: jsii.String(\"vpcId\"),\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRuleAssociationProps: route53resolver.CfnResolverRuleAssociationProps = {\n  resolverRuleId: 'resolverRuleId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  name: 'name',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverRuleAssociationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverRuleAssociationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverRuleAssociationProps: route53resolver.CfnResolverRuleAssociationProps = {\n  resolverRuleId: 'resolverRuleId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"f9f5fa50bfaa6ee5b160602d73ffcb6711ff0b33406d34e27d5bdaaf9cac0a15"},"45127d72f01306cbe6905d32cf9442e20c35184c8db847b8250b2503d711e7f8":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ncfn_resolver_rule_props = route53resolver.CfnResolverRuleProps(\n    domain_name=\"domainName\",\n    rule_type=\"ruleType\",\n\n    # the properties below are optional\n    name=\"name\",\n    resolver_endpoint_id=\"resolverEndpointId\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    target_ips=[route53resolver.CfnResolverRule.TargetAddressProperty(\n        ip=\"ip\",\n        ipv6=\"ipv6\",\n        port=\"port\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar cfnResolverRuleProps = new CfnResolverRuleProps {\n    DomainName = \"domainName\",\n    RuleType = \"ruleType\",\n\n    // the properties below are optional\n    Name = \"name\",\n    ResolverEndpointId = \"resolverEndpointId\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TargetIps = new [] { new TargetAddressProperty {\n        Ip = \"ip\",\n        Ipv6 = \"ipv6\",\n        Port = \"port\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nCfnResolverRuleProps cfnResolverRuleProps = CfnResolverRuleProps.builder()\n        .domainName(\"domainName\")\n        .ruleType(\"ruleType\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .resolverEndpointId(\"resolverEndpointId\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .targetIps(List.of(TargetAddressProperty.builder()\n                .ip(\"ip\")\n                .ipv6(\"ipv6\")\n                .port(\"port\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ncfnResolverRuleProps := &CfnResolverRuleProps{\n\tDomainName: jsii.String(\"domainName\"),\n\tRuleType: jsii.String(\"ruleType\"),\n\n\t// the properties below are optional\n\tName: jsii.String(\"name\"),\n\tResolverEndpointId: jsii.String(\"resolverEndpointId\"),\n\tTags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tKey: jsii.String(\"key\"),\n\t\t\tValue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tTargetIps: []interface{}{\n\t\t&TargetAddressProperty{\n\t\t\tIp: jsii.String(\"ip\"),\n\t\t\tIpv6: jsii.String(\"ipv6\"),\n\t\t\tPort: jsii.String(\"port\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRuleProps: route53resolver.CfnResolverRuleProps = {\n  domainName: 'domainName',\n  ruleType: 'ruleType',\n\n  // the properties below are optional\n  name: 'name',\n  resolverEndpointId: 'resolverEndpointId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetIps: [{\n    ip: 'ip',\n    ipv6: 'ipv6',\n    port: 'port',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.CfnResolverRuleProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.CfnResolverRuleProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnResolverRuleProps: route53resolver.CfnResolverRuleProps = {\n  domainName: 'domainName',\n  ruleType: 'ruleType',\n\n  // the properties below are optional\n  name: 'name',\n  resolverEndpointId: 'resolverEndpointId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetIps: [{\n    ip: 'ip',\n    ipv6: 'ipv6',\n    port: 'port',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":15,"153":1,"169":1,"192":2,"193":3,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"ba1bdce7cb0269321f76a76f85d15e7b65887b68df01ce216cd5d9d5431bf76f"},"8cc4815af81b2ff7122dc189ad073418c608ef213e4a22213872713edf1c6330":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n# rule_group: route53resolver.FirewallRuleGroup\n\n\nrule_group.add_rule(\n    priority=10,\n    firewall_domain_list=my_block_list,\n    # block and reply with NXDOMAIN\n    action=route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nx_domain())\n)\n\nrule_group.add_rule(\n    priority=20,\n    firewall_domain_list=my_block_list,\n    # block and override DNS response with a custom domain\n    action=route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override(\"amazon.com\"))\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\nFirewallRuleGroup ruleGroup;\n\n\nruleGroup.AddRule(new FirewallRule {\n    Priority = 10,\n    FirewallDomainList = myBlockList,\n    // block and reply with NXDOMAIN\n    Action = FirewallRuleAction.Block(DnsBlockResponse.NxDomain())\n});\n\nruleGroup.AddRule(new FirewallRule {\n    Priority = 20,\n    FirewallDomainList = myBlockList,\n    // block and override DNS response with a custom domain\n    Action = FirewallRuleAction.Block(DnsBlockResponse.Override(\"amazon.com\"))\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\nFirewallRuleGroup ruleGroup;\n\n\nruleGroup.addRule(FirewallRule.builder()\n        .priority(10)\n        .firewallDomainList(myBlockList)\n        // block and reply with NXDOMAIN\n        .action(FirewallRuleAction.block(DnsBlockResponse.nxDomain()))\n        .build());\n\nruleGroup.addRule(FirewallRule.builder()\n        .priority(20)\n        .firewallDomainList(myBlockList)\n        // block and override DNS response with a custom domain\n        .action(FirewallRuleAction.block(DnsBlockResponse.override(\"amazon.com\")))\n        .build());","version":"1"},"go":{"source":"var myBlockList firewallDomainList\nvar ruleGroup firewallRuleGroup\n\n\nruleGroup.AddRule(&FirewallRule{\n\tPriority: jsii.Number(10),\n\tFirewallDomainList: myBlockList,\n\t// block and reply with NXDOMAIN\n\tAction: route53resolver.FirewallRuleAction_Block(route53resolver.DnsBlockResponse_NxDomain()),\n})\n\nruleGroup.AddRule(&FirewallRule{\n\tPriority: jsii.Number(20),\n\tFirewallDomainList: myBlockList,\n\t// block and override DNS response with a custom domain\n\tAction: route53resolver.FirewallRuleAction_*Block(route53resolver.DnsBlockResponse_Override(jsii.String(\"amazon.com\"))),\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.DnsBlockResponse"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.DnsBlockResponse","@aws-cdk/aws-route53resolver.DnsBlockResponse#nxDomain","@aws-cdk/aws-route53resolver.DnsBlockResponse#override","@aws-cdk/aws-route53resolver.FirewallRule","@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup#addRule","@aws-cdk/aws-route53resolver.IFirewallDomainList"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":2,"10":1,"75":30,"130":2,"153":2,"169":2,"193":2,"194":10,"196":6,"225":2,"226":2,"242":2,"243":2,"281":6,"290":1},"fqnsFingerprint":"a860f3b987dbe72d0acd7c4f01b74d0878eaac6029af7ae046b8f5f0dfda9d93"},"b4c7d0030eb2df1b38e40548fddd4baf03bce5dcbe0fa8a1aee6413f8baf516b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_route53resolver as route53resolver\n\ndomains_config = route53resolver.DomainsConfig(\n    domain_file_url=\"domainFileUrl\",\n    domains=[\"domains\"]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Route53Resolver;\n\nvar domainsConfig = new DomainsConfig {\n    DomainFileUrl = \"domainFileUrl\",\n    Domains = new [] { \"domains\" }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.route53resolver.*;\n\nDomainsConfig domainsConfig = DomainsConfig.builder()\n        .domainFileUrl(\"domainFileUrl\")\n        .domains(List.of(\"domains\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\ndomainsConfig := &DomainsConfig{\n\tDomainFileUrl: jsii.String(\"domainFileUrl\"),\n\tDomains: []*string{\n\t\tjsii.String(\"domains\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst domainsConfig: route53resolver.DomainsConfig = {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.DomainsConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.DomainsConfig"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst domainsConfig: route53resolver.DomainsConfig = {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"0d6cb0ab8380385dbe7d7906891ae591b35ec410d17674755a63a003034ca9bc"},"b4b7a9261690d7ca45710e9019a43c708a23b0849074dccc417dd78170d7c1d3":{"translations":{"python":{"source":"block_list = route53resolver.FirewallDomainList(self, \"BlockList\",\n    domains=route53resolver.FirewallDomains.from_list([\"bad-domain.com\", \"bot-domain.net\"])\n)\n\ns3_list = route53resolver.FirewallDomainList(self, \"S3List\",\n    domains=route53resolver.FirewallDomains.from_s3_url(\"s3://bucket/prefix/object\")\n)\n\nasset_list = route53resolver.FirewallDomainList(self, \"AssetList\",\n    domains=route53resolver.FirewallDomains.from_asset(\"/path/to/domains.txt\")\n)","version":"2"},"csharp":{"source":"var blockList = new FirewallDomainList(this, \"BlockList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromList(new [] { \"bad-domain.com\", \"bot-domain.net\" })\n});\n\nvar s3List = new FirewallDomainList(this, \"S3List\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromS3Url(\"s3://bucket/prefix/object\")\n});\n\nvar assetList = new FirewallDomainList(this, \"AssetList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromAsset(\"/path/to/domains.txt\")\n});","version":"1"},"java":{"source":"FirewallDomainList blockList = FirewallDomainList.Builder.create(this, \"BlockList\")\n        .domains(FirewallDomains.fromList(List.of(\"bad-domain.com\", \"bot-domain.net\")))\n        .build();\n\nFirewallDomainList s3List = FirewallDomainList.Builder.create(this, \"S3List\")\n        .domains(FirewallDomains.fromS3Url(\"s3://bucket/prefix/object\"))\n        .build();\n\nFirewallDomainList assetList = FirewallDomainList.Builder.create(this, \"AssetList\")\n        .domains(FirewallDomains.fromAsset(\"/path/to/domains.txt\"))\n        .build();","version":"1"},"go":{"source":"blockList := route53resolver.NewFirewallDomainList(this, jsii.String(\"BlockList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromList([]*string{\n\t\tjsii.String(\"bad-domain.com\"),\n\t\tjsii.String(\"bot-domain.net\"),\n\t}),\n})\n\ns3List := route53resolver.NewFirewallDomainList(this, jsii.String(\"S3List\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromS3Url(jsii.String(\"s3://bucket/prefix/object\")),\n})\n\nassetList := route53resolver.NewFirewallDomainList(this, jsii.String(\"AssetList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromAsset(jsii.String(\"/path/to/domains.txt\")),\n})","version":"1"},"$":{"source":"const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallDomainList"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallDomainList","@aws-cdk/aws-route53resolver.FirewallDomainListProps","@aws-cdk/aws-route53resolver.FirewallDomains","@aws-cdk/aws-route53resolver.FirewallDomains#fromAsset","@aws-cdk/aws-route53resolver.FirewallDomains#fromList","@aws-cdk/aws-route53resolver.FirewallDomains#fromS3Url","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":7,"75":21,"104":3,"192":1,"193":3,"194":9,"196":3,"197":3,"225":3,"242":3,"243":3,"281":3},"fqnsFingerprint":"c7f6afe1f42c4a99f5d2c8f3e10340033ff88a867391fc7e010ff37aa4906222"},"0ff68a8041c77d8306293c2e1f07a35975a559942a50f2c53e0a4fdf2fa3bbe4":{"translations":{"python":{"source":"block_list = route53resolver.FirewallDomainList(self, \"BlockList\",\n    domains=route53resolver.FirewallDomains.from_list([\"bad-domain.com\", \"bot-domain.net\"])\n)\n\ns3_list = route53resolver.FirewallDomainList(self, \"S3List\",\n    domains=route53resolver.FirewallDomains.from_s3_url(\"s3://bucket/prefix/object\")\n)\n\nasset_list = route53resolver.FirewallDomainList(self, \"AssetList\",\n    domains=route53resolver.FirewallDomains.from_asset(\"/path/to/domains.txt\")\n)","version":"2"},"csharp":{"source":"var blockList = new FirewallDomainList(this, \"BlockList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromList(new [] { \"bad-domain.com\", \"bot-domain.net\" })\n});\n\nvar s3List = new FirewallDomainList(this, \"S3List\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromS3Url(\"s3://bucket/prefix/object\")\n});\n\nvar assetList = new FirewallDomainList(this, \"AssetList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromAsset(\"/path/to/domains.txt\")\n});","version":"1"},"java":{"source":"FirewallDomainList blockList = FirewallDomainList.Builder.create(this, \"BlockList\")\n        .domains(FirewallDomains.fromList(List.of(\"bad-domain.com\", \"bot-domain.net\")))\n        .build();\n\nFirewallDomainList s3List = FirewallDomainList.Builder.create(this, \"S3List\")\n        .domains(FirewallDomains.fromS3Url(\"s3://bucket/prefix/object\"))\n        .build();\n\nFirewallDomainList assetList = FirewallDomainList.Builder.create(this, \"AssetList\")\n        .domains(FirewallDomains.fromAsset(\"/path/to/domains.txt\"))\n        .build();","version":"1"},"go":{"source":"blockList := route53resolver.NewFirewallDomainList(this, jsii.String(\"BlockList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromList([]*string{\n\t\tjsii.String(\"bad-domain.com\"),\n\t\tjsii.String(\"bot-domain.net\"),\n\t}),\n})\n\ns3List := route53resolver.NewFirewallDomainList(this, jsii.String(\"S3List\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromS3Url(jsii.String(\"s3://bucket/prefix/object\")),\n})\n\nassetList := route53resolver.NewFirewallDomainList(this, jsii.String(\"AssetList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromAsset(jsii.String(\"/path/to/domains.txt\")),\n})","version":"1"},"$":{"source":"const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallDomainListProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallDomainList","@aws-cdk/aws-route53resolver.FirewallDomainListProps","@aws-cdk/aws-route53resolver.FirewallDomains","@aws-cdk/aws-route53resolver.FirewallDomains#fromAsset","@aws-cdk/aws-route53resolver.FirewallDomains#fromList","@aws-cdk/aws-route53resolver.FirewallDomains#fromS3Url","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":7,"75":21,"104":3,"192":1,"193":3,"194":9,"196":3,"197":3,"225":3,"242":3,"243":3,"281":3},"fqnsFingerprint":"c7f6afe1f42c4a99f5d2c8f3e10340033ff88a867391fc7e010ff37aa4906222"},"04fe70f6bb74770532b1551bc432a011fc7c7a571107495d97283cc39037d66e":{"translations":{"python":{"source":"block_list = route53resolver.FirewallDomainList(self, \"BlockList\",\n    domains=route53resolver.FirewallDomains.from_list([\"bad-domain.com\", \"bot-domain.net\"])\n)\n\ns3_list = route53resolver.FirewallDomainList(self, \"S3List\",\n    domains=route53resolver.FirewallDomains.from_s3_url(\"s3://bucket/prefix/object\")\n)\n\nasset_list = route53resolver.FirewallDomainList(self, \"AssetList\",\n    domains=route53resolver.FirewallDomains.from_asset(\"/path/to/domains.txt\")\n)","version":"2"},"csharp":{"source":"var blockList = new FirewallDomainList(this, \"BlockList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromList(new [] { \"bad-domain.com\", \"bot-domain.net\" })\n});\n\nvar s3List = new FirewallDomainList(this, \"S3List\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromS3Url(\"s3://bucket/prefix/object\")\n});\n\nvar assetList = new FirewallDomainList(this, \"AssetList\", new FirewallDomainListProps {\n    Domains = FirewallDomains.FromAsset(\"/path/to/domains.txt\")\n});","version":"1"},"java":{"source":"FirewallDomainList blockList = FirewallDomainList.Builder.create(this, \"BlockList\")\n        .domains(FirewallDomains.fromList(List.of(\"bad-domain.com\", \"bot-domain.net\")))\n        .build();\n\nFirewallDomainList s3List = FirewallDomainList.Builder.create(this, \"S3List\")\n        .domains(FirewallDomains.fromS3Url(\"s3://bucket/prefix/object\"))\n        .build();\n\nFirewallDomainList assetList = FirewallDomainList.Builder.create(this, \"AssetList\")\n        .domains(FirewallDomains.fromAsset(\"/path/to/domains.txt\"))\n        .build();","version":"1"},"go":{"source":"blockList := route53resolver.NewFirewallDomainList(this, jsii.String(\"BlockList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromList([]*string{\n\t\tjsii.String(\"bad-domain.com\"),\n\t\tjsii.String(\"bot-domain.net\"),\n\t}),\n})\n\ns3List := route53resolver.NewFirewallDomainList(this, jsii.String(\"S3List\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromS3Url(jsii.String(\"s3://bucket/prefix/object\")),\n})\n\nassetList := route53resolver.NewFirewallDomainList(this, jsii.String(\"AssetList\"), &FirewallDomainListProps{\n\tDomains: route53resolver.FirewallDomains_FromAsset(jsii.String(\"/path/to/domains.txt\")),\n})","version":"1"},"$":{"source":"const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallDomains"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallDomainList","@aws-cdk/aws-route53resolver.FirewallDomainListProps","@aws-cdk/aws-route53resolver.FirewallDomains","@aws-cdk/aws-route53resolver.FirewallDomains#fromAsset","@aws-cdk/aws-route53resolver.FirewallDomains#fromList","@aws-cdk/aws-route53resolver.FirewallDomains#fromS3Url","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"10":7,"75":21,"104":3,"192":1,"193":3,"194":9,"196":3,"197":3,"225":3,"242":3,"243":3,"281":3},"fqnsFingerprint":"c7f6afe1f42c4a99f5d2c8f3e10340033ff88a867391fc7e010ff37aa4906222"},"196adef7e2fdb1a31a203ce7f5758261a241a38744832f6b7bb4060b883e06e3":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n# rule_group: route53resolver.FirewallRuleGroup\n\n\nrule_group.add_rule(\n    priority=10,\n    firewall_domain_list=my_block_list,\n    # block and reply with NXDOMAIN\n    action=route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nx_domain())\n)\n\nrule_group.add_rule(\n    priority=20,\n    firewall_domain_list=my_block_list,\n    # block and override DNS response with a custom domain\n    action=route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override(\"amazon.com\"))\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\nFirewallRuleGroup ruleGroup;\n\n\nruleGroup.AddRule(new FirewallRule {\n    Priority = 10,\n    FirewallDomainList = myBlockList,\n    // block and reply with NXDOMAIN\n    Action = FirewallRuleAction.Block(DnsBlockResponse.NxDomain())\n});\n\nruleGroup.AddRule(new FirewallRule {\n    Priority = 20,\n    FirewallDomainList = myBlockList,\n    // block and override DNS response with a custom domain\n    Action = FirewallRuleAction.Block(DnsBlockResponse.Override(\"amazon.com\"))\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\nFirewallRuleGroup ruleGroup;\n\n\nruleGroup.addRule(FirewallRule.builder()\n        .priority(10)\n        .firewallDomainList(myBlockList)\n        // block and reply with NXDOMAIN\n        .action(FirewallRuleAction.block(DnsBlockResponse.nxDomain()))\n        .build());\n\nruleGroup.addRule(FirewallRule.builder()\n        .priority(20)\n        .firewallDomainList(myBlockList)\n        // block and override DNS response with a custom domain\n        .action(FirewallRuleAction.block(DnsBlockResponse.override(\"amazon.com\")))\n        .build());","version":"1"},"go":{"source":"var myBlockList firewallDomainList\nvar ruleGroup firewallRuleGroup\n\n\nruleGroup.AddRule(&FirewallRule{\n\tPriority: jsii.Number(10),\n\tFirewallDomainList: myBlockList,\n\t// block and reply with NXDOMAIN\n\tAction: route53resolver.FirewallRuleAction_Block(route53resolver.DnsBlockResponse_NxDomain()),\n})\n\nruleGroup.AddRule(&FirewallRule{\n\tPriority: jsii.Number(20),\n\tFirewallDomainList: myBlockList,\n\t// block and override DNS response with a custom domain\n\tAction: route53resolver.FirewallRuleAction_*Block(route53resolver.DnsBlockResponse_Override(jsii.String(\"amazon.com\"))),\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRule"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.DnsBlockResponse","@aws-cdk/aws-route53resolver.DnsBlockResponse#nxDomain","@aws-cdk/aws-route53resolver.DnsBlockResponse#override","@aws-cdk/aws-route53resolver.FirewallRule","@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup#addRule","@aws-cdk/aws-route53resolver.IFirewallDomainList"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":2,"10":1,"75":30,"130":2,"153":2,"169":2,"193":2,"194":10,"196":6,"225":2,"226":2,"242":2,"243":2,"281":6,"290":1},"fqnsFingerprint":"a860f3b987dbe72d0acd7c4f01b74d0878eaac6029af7ae046b8f5f0dfda9d93"},"84eb325782be7625ef1b836a3227ff855ed258e14ed9eaa5873b440d641d504b":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n\nroute53resolver.FirewallRuleGroup(self, \"RuleGroup\",\n    rules=[route53resolver.FirewallRule(\n        priority=10,\n        firewall_domain_list=my_block_list,\n        # block and reply with NODATA\n        action=route53resolver.FirewallRuleAction.block()\n    )\n    ]\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\n\nnew FirewallRuleGroup(this, \"RuleGroup\", new FirewallRuleGroupProps {\n    Rules = new [] { new FirewallRule {\n        Priority = 10,\n        FirewallDomainList = myBlockList,\n        // block and reply with NODATA\n        Action = FirewallRuleAction.Block()\n    } }\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\n\nFirewallRuleGroup.Builder.create(this, \"RuleGroup\")\n        .rules(List.of(FirewallRule.builder()\n                .priority(10)\n                .firewallDomainList(myBlockList)\n                // block and reply with NODATA\n                .action(FirewallRuleAction.block())\n                .build()))\n        .build();","version":"1"},"go":{"source":"var myBlockList firewallDomainList\n\nroute53resolver.NewFirewallRuleGroup(this, jsii.String(\"RuleGroup\"), &FirewallRuleGroupProps{\n\tRules: []firewallRule{\n\t\t&firewallRule{\n\t\t\tPriority: jsii.Number(10),\n\t\t\tFirewallDomainList: myBlockList,\n\t\t\t// block and reply with NODATA\n\t\t\tAction: route53resolver.FirewallRuleAction_Block(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRuleAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup","@aws-cdk/aws-route53resolver.FirewallRuleGroupProps","@aws-cdk/aws-route53resolver.IFirewallDomainList","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":1,"75":13,"104":1,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":4,"290":1},"fqnsFingerprint":"67a37db27f1e2b999289ff494619e51c0fdc764735e493e7d0fd18d07e28b132"},"7fce8a96e1ed7b6ec4082eb8f2d7218f25cc207210d0f081822135ad62949945":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n\nroute53resolver.FirewallRuleGroup(self, \"RuleGroup\",\n    rules=[route53resolver.FirewallRule(\n        priority=10,\n        firewall_domain_list=my_block_list,\n        # block and reply with NODATA\n        action=route53resolver.FirewallRuleAction.block()\n    )\n    ]\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\n\nnew FirewallRuleGroup(this, \"RuleGroup\", new FirewallRuleGroupProps {\n    Rules = new [] { new FirewallRule {\n        Priority = 10,\n        FirewallDomainList = myBlockList,\n        // block and reply with NODATA\n        Action = FirewallRuleAction.Block()\n    } }\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\n\nFirewallRuleGroup.Builder.create(this, \"RuleGroup\")\n        .rules(List.of(FirewallRule.builder()\n                .priority(10)\n                .firewallDomainList(myBlockList)\n                // block and reply with NODATA\n                .action(FirewallRuleAction.block())\n                .build()))\n        .build();","version":"1"},"go":{"source":"var myBlockList firewallDomainList\n\nroute53resolver.NewFirewallRuleGroup(this, jsii.String(\"RuleGroup\"), &FirewallRuleGroupProps{\n\tRules: []firewallRule{\n\t\t&firewallRule{\n\t\t\tPriority: jsii.Number(10),\n\t\t\tFirewallDomainList: myBlockList,\n\t\t\t// block and reply with NODATA\n\t\t\tAction: route53resolver.FirewallRuleAction_Block(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRuleGroup"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup","@aws-cdk/aws-route53resolver.FirewallRuleGroupProps","@aws-cdk/aws-route53resolver.IFirewallDomainList","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":1,"75":13,"104":1,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":4,"290":1},"fqnsFingerprint":"67a37db27f1e2b999289ff494619e51c0fdc764735e493e7d0fd18d07e28b132"},"ee1668564bfc69c804127ebca3698bdd7615d07a823ba3d6a58259a6eb1cfd0d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_route53resolver as route53resolver\n\n# firewall_rule_group: route53resolver.FirewallRuleGroup\n# vpc: ec2.Vpc\n\nfirewall_rule_group_association = route53resolver.FirewallRuleGroupAssociation(self, \"MyFirewallRuleGroupAssociation\",\n    firewall_rule_group=firewall_rule_group,\n    priority=123,\n    vpc=vpc,\n\n    # the properties below are optional\n    mutation_protection=False,\n    name=\"name\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Route53Resolver;\n\nFirewallRuleGroup firewallRuleGroup;\nVpc vpc;\n\nvar firewallRuleGroupAssociation = new FirewallRuleGroupAssociation(this, \"MyFirewallRuleGroupAssociation\", new FirewallRuleGroupAssociationProps {\n    FirewallRuleGroup = firewallRuleGroup,\n    Priority = 123,\n    Vpc = vpc,\n\n    // the properties below are optional\n    MutationProtection = false,\n    Name = \"name\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.route53resolver.*;\n\nFirewallRuleGroup firewallRuleGroup;\nVpc vpc;\n\nFirewallRuleGroupAssociation firewallRuleGroupAssociation = FirewallRuleGroupAssociation.Builder.create(this, \"MyFirewallRuleGroupAssociation\")\n        .firewallRuleGroup(firewallRuleGroup)\n        .priority(123)\n        .vpc(vpc)\n\n        // the properties below are optional\n        .mutationProtection(false)\n        .name(\"name\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\nvar firewallRuleGroup firewallRuleGroup\nvar vpc vpc\n\nfirewallRuleGroupAssociation := route53resolver.NewFirewallRuleGroupAssociation(this, jsii.String(\"MyFirewallRuleGroupAssociation\"), &FirewallRuleGroupAssociationProps{\n\tFirewallRuleGroup: firewallRuleGroup,\n\tPriority: jsii.Number(123),\n\tVpc: vpc,\n\n\t// the properties below are optional\n\tMutationProtection: jsii.Boolean(false),\n\tName: jsii.String(\"name\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\ndeclare const firewallRuleGroup: route53resolver.FirewallRuleGroup;\ndeclare const vpc: ec2.Vpc;\nconst firewallRuleGroupAssociation = new route53resolver.FirewallRuleGroupAssociation(this, 'MyFirewallRuleGroupAssociation', {\n  firewallRuleGroup: firewallRuleGroup,\n  priority: 123,\n  vpc: vpc,\n\n  // the properties below are optional\n  mutationProtection: false,\n  name: 'name',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociation"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociation","@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationProps","@aws-cdk/aws-route53resolver.IFirewallRuleGroup","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\ndeclare const firewallRuleGroup: route53resolver.FirewallRuleGroup;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst firewallRuleGroupAssociation = new route53resolver.FirewallRuleGroupAssociation(this, 'MyFirewallRuleGroupAssociation', {\n  firewallRuleGroup: firewallRuleGroup,\n  priority: 123,\n  vpc: vpc,\n\n  // the properties below are optional\n  mutationProtection: false,\n  name: 'name',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":18,"91":1,"104":1,"130":2,"153":2,"169":2,"193":1,"194":1,"197":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":5,"290":1},"fqnsFingerprint":"f7a7cf2c2c656d8df40c62f162163d2019991549f1c14d7b52ce1ae60d311c75"},"ddb03e7388b5f036f748b461b98f64b8e8e3402f315d73f7b45bfd14a21a344a":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n# rule_group: route53resolver.FirewallRuleGroup\n# my_vpc: ec2.Vpc\n\n\nrule_group.associate(\"Association\",\n    priority=101,\n    vpc=my_vpc\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\nFirewallRuleGroup ruleGroup;\nVpc myVpc;\n\n\nruleGroup.Associate(\"Association\", new FirewallRuleGroupAssociationOptions {\n    Priority = 101,\n    Vpc = myVpc\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\nFirewallRuleGroup ruleGroup;\nVpc myVpc;\n\n\nruleGroup.associate(\"Association\", FirewallRuleGroupAssociationOptions.builder()\n        .priority(101)\n        .vpc(myVpc)\n        .build());","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\nvar ruleGroup firewallRuleGroup\nvar myVpc vpc\n\n\nruleGroup.Associate(jsii.String(\"Association\"), &FirewallRuleGroupAssociationOptions{\n\tPriority: jsii.Number(101),\n\tVpc: myVpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\ndeclare const myVpc: ec2.Vpc;\n\nruleGroup.associate('Association', {\n  priority: 101,\n  vpc: myVpc,\n})","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-route53resolver.FirewallRuleGroup#associate","@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\ndeclare const myVpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nruleGroup.associate('Association', {\n  priority: 101,\n  vpc: myVpc,\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":2,"75":12,"130":2,"153":2,"169":2,"193":1,"194":1,"196":1,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"db3ad3cb0849e2418055d353ba967451010e36d68284cc35e3e0df88f529071b"},"7889e673ae53bef2237809244f46b278978bb4754b8db97d41a467e065d496ae":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_route53resolver as route53resolver\n\n# firewall_rule_group: route53resolver.FirewallRuleGroup\n# vpc: ec2.Vpc\n\nfirewall_rule_group_association_props = route53resolver.FirewallRuleGroupAssociationProps(\n    firewall_rule_group=firewall_rule_group,\n    priority=123,\n    vpc=vpc,\n\n    # the properties below are optional\n    mutation_protection=False,\n    name=\"name\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Route53Resolver;\n\nFirewallRuleGroup firewallRuleGroup;\nVpc vpc;\n\nvar firewallRuleGroupAssociationProps = new FirewallRuleGroupAssociationProps {\n    FirewallRuleGroup = firewallRuleGroup,\n    Priority = 123,\n    Vpc = vpc,\n\n    // the properties below are optional\n    MutationProtection = false,\n    Name = \"name\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.route53resolver.*;\n\nFirewallRuleGroup firewallRuleGroup;\nVpc vpc;\n\nFirewallRuleGroupAssociationProps firewallRuleGroupAssociationProps = FirewallRuleGroupAssociationProps.builder()\n        .firewallRuleGroup(firewallRuleGroup)\n        .priority(123)\n        .vpc(vpc)\n\n        // the properties below are optional\n        .mutationProtection(false)\n        .name(\"name\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport route53resolver \"github.com/aws-samples/dummy/awscdkawsroute53resolver\"\n\nvar firewallRuleGroup firewallRuleGroup\nvar vpc vpc\n\nfirewallRuleGroupAssociationProps := &FirewallRuleGroupAssociationProps{\n\tFirewallRuleGroup: firewallRuleGroup,\n\tPriority: jsii.Number(123),\n\tVpc: vpc,\n\n\t// the properties below are optional\n\tMutationProtection: jsii.Boolean(false),\n\tName: jsii.String(\"name\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\ndeclare const firewallRuleGroup: route53resolver.FirewallRuleGroup;\ndeclare const vpc: ec2.Vpc;\nconst firewallRuleGroupAssociationProps: route53resolver.FirewallRuleGroupAssociationProps = {\n  firewallRuleGroup: firewallRuleGroup,\n  priority: 123,\n  vpc: vpc,\n\n  // the properties below are optional\n  mutationProtection: false,\n  name: 'name',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationProps","@aws-cdk/aws-route53resolver.IFirewallRuleGroup"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\ndeclare const firewallRuleGroup: route53resolver.FirewallRuleGroup;\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst firewallRuleGroupAssociationProps: route53resolver.FirewallRuleGroupAssociationProps = {\n  firewallRuleGroup: firewallRuleGroup,\n  priority: 123,\n  vpc: vpc,\n\n  // the properties below are optional\n  mutationProtection: false,\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":3,"75":18,"91":1,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":5,"290":1},"fqnsFingerprint":"c6d30de9328ebdab7872f5998d04cd11698bdbb6a88cda43d7e01f5c8a7f2bbf"},"517ed59aa2afb3c7b08a36c907fb3675a21222f7b0a847796b63bc51d2fc1bdd":{"translations":{"python":{"source":"# my_block_list: route53resolver.FirewallDomainList\n\nroute53resolver.FirewallRuleGroup(self, \"RuleGroup\",\n    rules=[route53resolver.FirewallRule(\n        priority=10,\n        firewall_domain_list=my_block_list,\n        # block and reply with NODATA\n        action=route53resolver.FirewallRuleAction.block()\n    )\n    ]\n)","version":"2"},"csharp":{"source":"FirewallDomainList myBlockList;\n\nnew FirewallRuleGroup(this, \"RuleGroup\", new FirewallRuleGroupProps {\n    Rules = new [] { new FirewallRule {\n        Priority = 10,\n        FirewallDomainList = myBlockList,\n        // block and reply with NODATA\n        Action = FirewallRuleAction.Block()\n    } }\n});","version":"1"},"java":{"source":"FirewallDomainList myBlockList;\n\nFirewallRuleGroup.Builder.create(this, \"RuleGroup\")\n        .rules(List.of(FirewallRule.builder()\n                .priority(10)\n                .firewallDomainList(myBlockList)\n                // block and reply with NODATA\n                .action(FirewallRuleAction.block())\n                .build()))\n        .build();","version":"1"},"go":{"source":"var myBlockList firewallDomainList\n\nroute53resolver.NewFirewallRuleGroup(this, jsii.String(\"RuleGroup\"), &FirewallRuleGroupProps{\n\tRules: []firewallRule{\n\t\t&firewallRule{\n\t\t\tPriority: jsii.Number(10),\n\t\t\tFirewallDomainList: myBlockList,\n\t\t\t// block and reply with NODATA\n\t\t\tAction: route53resolver.FirewallRuleAction_Block(),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-route53resolver.FirewallRuleGroupProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-route53resolver.FirewallRuleAction","@aws-cdk/aws-route53resolver.FirewallRuleAction#block","@aws-cdk/aws-route53resolver.FirewallRuleGroup","@aws-cdk/aws-route53resolver.FirewallRuleGroupProps","@aws-cdk/aws-route53resolver.IFirewallDomainList","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBlockList: route53resolver.FirewallDomainList;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"8":1,"10":1,"75":13,"104":1,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":4,"290":1},"fqnsFingerprint":"67a37db27f1e2b999289ff494619e51c0fdc764735e493e7d0fd18d07e28b132"}}}