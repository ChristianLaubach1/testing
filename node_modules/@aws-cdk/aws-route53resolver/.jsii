{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.204.0",
    "@aws-cdk/aws-s3": "1.204.0",
    "@aws-cdk/aws-s3-assets": "1.204.0",
    "@aws-cdk/core": "1.204.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Route53Resolver",
  "docs": {
    "deprecated": "AWS CDK v1 has reached End-of-Support on 2023-06-01.\nThis package is no longer being updated, and users should migrate to AWS CDK v2.\n\nFor more information on how to migrate, see https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html",
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.84.0 (build 5404dcf)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "aws-route53resolver"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-route53resolver",
  "readme": {
    "markdown": "# Amazon Route53 Resolver Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![End-of-Support](https://img.shields.io/badge/End--of--Support-critical.svg?style=for-the-badge)\n\n> AWS CDK v1 has reached End-of-Support on 2023-06-01.\n> This package is no longer being updated, and users should migrate to AWS CDK v2.\n>\n> For more information on how to migrate, see the [_Migrating to AWS CDK v2_ guide][doc].\n>\n> [doc]: https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html\n\n---\n\n<!--END STABILITY BANNER-->\n\n## DNS Firewall\n\nWith Route 53 Resolver DNS Firewall, you can filter and regulate outbound DNS traffic for your\nvirtual private connections (VPCs). To do this, you create reusable collections of filtering rules\nin DNS Firewall rule groups and associate the rule groups to your VPC.\n\nDNS Firewall provides protection for outbound DNS requests from your VPCs. These requests route\nthrough Resolver for domain name resolution. A primary use of DNS Firewall protections is to help\nprevent DNS exfiltration of your data. DNS exfiltration can happen when a bad actor compromises\nan application instance in your VPC and then uses DNS lookup to send data out of the VPC to a domain\nthat they control. With DNS Firewall, you can monitor and control the domains that your applications\ncan query. You can deny access to the domains that you know to be bad and allow all other queries\nto pass through. Alternately, you can deny access to all domains except for the ones that you\nexplicitly trust.\n\n### Domain lists\n\nDomain lists can be created using a list of strings, a text file stored in Amazon S3 or a local\ntext file:\n\n```ts\nconst blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});\n```\n\nThe file must be a text file and must contain a single domain per line.\n\nUse `FirewallDomainList.fromFirewallDomainListId()` to import an existing or [AWS managed domain list](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resolver-dns-firewall-managed-domain-lists.html):\n\n```ts\n// AWSManagedDomainsMalwareDomainList in us-east-1\nconst malwareList = route53resolver.FirewallDomainList.fromFirewallDomainListId(\n  this,\n  'Malware',\n  'rslvr-fdl-2c46f2ecbfec4dcc',\n);\n```\n\n### Rule group\n\nCreate a rule group:\n\n```ts\ndeclare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});\n```\n\nRules can be added at construction time or using `addRule()`:\n\n```ts\ndeclare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});\n```\n\nUse `associate()` to associate a rule group with a VPC:\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\ndeclare const myVpc: ec2.Vpc;\n\nruleGroup.associate('Association', {\n  priority: 101,\n  vpc: myVpc,\n})\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-route53resolver",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Route53Resolver",
      "packageId": "Amazon.CDK.AWS.Route53Resolver"
    },
    "java": {
      "maven": {
        "artifactId": "route53resolver",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.route53resolver"
    },
    "js": {
      "npm": "@aws-cdk/aws-route53resolver"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-route53resolver",
      "module": "aws_cdk.aws_route53resolver"
    }
  },
  "types": {
    "@aws-cdk/aws-route53resolver.CfnFirewallDomainList": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::FirewallDomainList",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "High-level information about a list of firewall domains for use in a [AWS::Route53Resolver::FirewallRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-rule.html) . This is returned by [GetFirewallDomainList](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetFirewallDomainList.html) .\n\nTo retrieve the domains that are defined for this domain list, call [ListFirewallDomains](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListFirewallDomains.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::FirewallDomainList`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallDomainList = new route53resolver.CfnFirewallDomainList(this, 'MyCfnFirewallDomainList', /* all optional props */ {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallDomainList",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::FirewallDomainList`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 234
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallDomainListProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 118
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 258
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 272
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFirewallDomainList",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 122
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the firewall domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 147
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The date and time that the domain list was created, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 153
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatorRequestId"
            },
            "remarks": "This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.",
            "stability": "external",
            "summary": "A unique string defined by you to identify the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 159
          },
          "name": "attrCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainCount"
            },
            "stability": "external",
            "summary": "The number of domain names that are specified in the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 165
          },
          "name": "attrDomainCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 171
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ManagedOwnerName"
            },
            "remarks": "For example, the managed domain list `AWSManagedDomainsMalwareDomainList` has the managed owner name `Route 53 Resolver DNS Firewall` .",
            "stability": "external",
            "summary": "The owner of the list, used only for lists that are not managed by you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 177
          },
          "name": "attrManagedOwnerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ModificationTime"
            },
            "stability": "external",
            "summary": "The date and time that the domain list was last modified, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 183
          },
          "name": "attrModificationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external",
            "summary": "The status of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 189
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StatusMessage"
            },
            "stability": "external",
            "summary": "Additional information about the status of the list, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 195
          },
          "name": "attrStatusMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 263
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-tags"
            },
            "stability": "external",
            "summary": "A list of the tag keys and values that you want to associate with the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 225
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-domainfileurl"
            },
            "remarks": "The file must be in an S3 bucket that's in the same Region as your DNS Firewall. The file must be a text file and must contain a single domain per line.",
            "stability": "external",
            "summary": "The fully qualified URL or URI of the file stored in Amazon Simple Storage Service (Amazon S3) that contains the list of domains to import."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 204
          },
          "name": "domainFileUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-domains"
            },
            "stability": "external",
            "summary": "A list of the domain lists that you have defined."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 211
          },
          "name": "domains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-name"
            },
            "stability": "external",
            "summary": "The name of the domain list."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 218
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallDomainList"
    },
    "@aws-cdk/aws-route53resolver.CfnFirewallDomainListProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFirewallDomainList`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallDomainListProps: route53resolver.CfnFirewallDomainListProps = {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallDomainListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 19
      },
      "name": "CfnFirewallDomainListProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-domainfileurl"
            },
            "remarks": "The file must be in an S3 bucket that's in the same Region as your DNS Firewall. The file must be a text file and must contain a single domain per line.",
            "stability": "external",
            "summary": "The fully qualified URL or URI of the file stored in Amazon Simple Storage Service (Amazon S3) that contains the list of domains to import."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 28
          },
          "name": "domainFileUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-domains"
            },
            "stability": "external",
            "summary": "A list of the domain lists that you have defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 35
          },
          "name": "domains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-name"
            },
            "stability": "external",
            "summary": "The name of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 42
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-tags"
            },
            "stability": "external",
            "summary": "A list of the tag keys and values that you want to associate with the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 49
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallDomainListProps"
    },
    "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::FirewallRuleGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "High-level information for a firewall rule group. A firewall rule group is a collection of rules that DNS Firewall uses to filter DNS network traffic for a VPC. To retrieve the rules for the rule group, call [ListFirewallRules](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListFirewallRules.html) .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::FirewallRuleGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroup = new route53resolver.CfnFirewallRuleGroup(this, 'MyCfnFirewallRuleGroup', /* all optional props */ {\n  firewallRules: [{\n    action: 'action',\n    firewallDomainListId: 'firewallDomainListId',\n    priority: 123,\n\n    // the properties below are optional\n    blockOverrideDnsType: 'blockOverrideDnsType',\n    blockOverrideDomain: 'blockOverrideDomain',\n    blockOverrideTtl: 123,\n    blockResponse: 'blockResponse',\n  }],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::FirewallRuleGroup`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 483
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 370
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 507
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 520
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFirewallRuleGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 374
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN (Amazon Resource Name) of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 399
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The date and time that the rule group was created, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 405
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatorRequestId"
            },
            "remarks": "This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.",
            "stability": "external",
            "summary": "A unique string defined by you to identify the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 411
          },
          "name": "attrCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 417
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ModificationTime"
            },
            "stability": "external",
            "summary": "The date and time that the rule group was last modified, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 423
          },
          "name": "attrModificationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "remarks": "When a rule group is shared with your account, this is the account that has shared the rule group with you.",
            "stability": "external",
            "summary": "The AWS account ID for the account that created the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 429
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "RuleCount"
            },
            "stability": "external",
            "summary": "The number of rules in the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 435
          },
          "name": "attrRuleCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ShareStatus"
            },
            "remarks": "Sharing is configured through AWS Resource Access Manager ( AWS RAM ).",
            "stability": "external",
            "summary": "Whether the rule group is shared with other AWS accounts , or was shared with the current account by another AWS account ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 441
          },
          "name": "attrShareStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external",
            "summary": "The status of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 447
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StatusMessage"
            },
            "stability": "external",
            "summary": "Additional information about the status of the rule group, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 453
          },
          "name": "attrStatusMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 512
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-tags"
            },
            "stability": "external",
            "summary": "A list of the tag keys and values that you want to associate with the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 474
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-firewallrules"
            },
            "stability": "external",
            "summary": "A list of the rules that you have defined."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 460
          },
          "name": "firewallRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-name"
            },
            "stability": "external",
            "summary": "The name of the rule group."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 467
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallRuleGroup"
    },
    "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A single firewall rule in a rule group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst firewallRuleProperty: route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty = {\n  action: 'action',\n  firewallDomainListId: 'firewallDomainListId',\n  priority: 123,\n\n  // the properties below are optional\n  blockOverrideDnsType: 'blockOverrideDnsType',\n  blockOverrideDomain: 'blockOverrideDomain',\n  blockOverrideTtl: 123,\n  blockResponse: 'blockResponse',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 534
      },
      "name": "FirewallRuleProperty",
      "namespace": "CfnFirewallRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-action"
            },
            "remarks": "- `ALERT` - Permit the request to go through but send an alert to the logs.\n- `BLOCK` - Disallow the request. If this is specified,then `BlockResponse` must also be specified.\n\nif `BlockResponse` is `OVERRIDE` , then all of the following `OVERRIDE` attributes must be specified:\n\n- `BlockOverrideDnsType`\n- `BlockOverrideDomain`\n- `BlockOverrideTtl`",
            "stability": "external",
            "summary": "The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list:  - `ALLOW` - Permit the request to go through."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 550
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-firewalldomainlistid"
            },
            "stability": "external",
            "summary": "The ID of the domain list that's used in the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 584
          },
          "name": "firewallDomainListId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-priority"
            },
            "remarks": "This value must be unique within the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.",
            "stability": "external",
            "summary": "The priority of the rule in the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 590
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-blockoverridednstype"
            },
            "remarks": "This determines the format of the record value that you provided in `BlockOverrideDomain` . Used for the rule action `BLOCK` with a `BlockResponse` setting of `OVERRIDE` .",
            "stability": "external",
            "summary": "The DNS record's type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 556
          },
          "name": "blockOverrideDnsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-blockoverridedomain"
            },
            "remarks": "Used for the rule action `BLOCK` with a `BlockResponse` setting of `OVERRIDE` .",
            "stability": "external",
            "summary": "The custom DNS record to send back in response to the query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 562
          },
          "name": "blockOverrideDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-blockoverridettl"
            },
            "remarks": "Used for the rule action `BLOCK` with a `BlockResponse` setting of `OVERRIDE` .",
            "stability": "external",
            "summary": "The recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 568
          },
          "name": "blockOverrideTtl",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-firewallrulegroup-firewallrule.html#cfn-route53resolver-firewallrulegroup-firewallrule-blockresponse"
            },
            "remarks": "- `NODATA` - Respond indicating that the query was successful, but no response is available for it.\n- `NXDOMAIN` - Respond indicating that the domain name that's in the query doesn't exist.\n- `OVERRIDE` - Provide a custom override in the response. This option requires custom handling details in the rule's `BlockOverride*` settings.",
            "stability": "external",
            "summary": "The way that you want DNS Firewall to block the request. Used for the rule action setting `BLOCK` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 578
          },
          "name": "blockResponse",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallRuleGroup.FirewallRuleProperty"
    },
    "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociation": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::FirewallRuleGroupAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An association between a firewall rule group and a VPC, which enables DNS filtering for the VPC.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::FirewallRuleGroupAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroupAssociation = new route53resolver.CfnFirewallRuleGroupAssociation(this, 'MyCfnFirewallRuleGroupAssociation', {\n  firewallRuleGroupId: 'firewallRuleGroupId',\n  priority: 123,\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mutationProtection: 'mutationProtection',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::FirewallRuleGroupAssociation`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 919
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 793
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 947
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 963
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnFirewallRuleGroupAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 797
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the firewall rule group association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 822
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The date and time that the association was created, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 828
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatorRequestId"
            },
            "remarks": "This allows you to retry failed requests without the risk of running the operation twice. This can be any unique string, for example, a timestamp.",
            "stability": "external",
            "summary": "A unique string defined by you to identify the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 834
          },
          "name": "attrCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The identifier for the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 840
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ManagedOwnerName"
            },
            "remarks": "If you use AWS Firewall Manager to manage your firewallls from DNS Firewall, then this reports Firewall Manager as the managed owner.",
            "stability": "external",
            "summary": "The owner of the association, used only for associations that are not managed by you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 846
          },
          "name": "attrManagedOwnerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ModificationTime"
            },
            "stability": "external",
            "summary": "The date and time that the association was last modified, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 852
          },
          "name": "attrModificationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "stability": "external",
            "summary": "The current status of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 858
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "StatusMessage"
            },
            "stability": "external",
            "summary": "Additional information about the status of the response, if available."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 864
          },
          "name": "attrStatusMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 952
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-tags"
            },
            "stability": "external",
            "summary": "A list of the tag keys and values that you want to associate with the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 910
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-firewallrulegroupid"
            },
            "stability": "external",
            "summary": "The unique identifier of the firewall rule group."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 871
          },
          "name": "firewallRuleGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-priority"
            },
            "remarks": "DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nYou must specify a unique priority for each rule group that you associate with a single VPC. To make it easier to insert rule groups later, leave space between the numbers, for example, use 101, 200, and so on. You can change the priority setting for a rule group association after you create it.\n\nThe allowed values for `Priority` are between 100 and 9900 (excluding 100 and 9900).",
            "stability": "external",
            "summary": "The setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 882
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-vpcid"
            },
            "stability": "external",
            "summary": "The unique identifier of the VPC that is associated with the rule group."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 889
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-mutationprotection"
            },
            "stability": "external",
            "summary": "If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 896
          },
          "name": "mutationProtection",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-name"
            },
            "stability": "external",
            "summary": "The name of the association."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 903
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallRuleGroupAssociation"
    },
    "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociationProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFirewallRuleGroupAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroupAssociationProps: route53resolver.CfnFirewallRuleGroupAssociationProps = {\n  firewallRuleGroupId: 'firewallRuleGroupId',\n  priority: 123,\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  mutationProtection: 'mutationProtection',\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 671
      },
      "name": "CfnFirewallRuleGroupAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-firewallrulegroupid"
            },
            "stability": "external",
            "summary": "The unique identifier of the firewall rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 678
          },
          "name": "firewallRuleGroupId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-priority"
            },
            "remarks": "DNS Firewall filters VPC traffic starting from rule group with the lowest numeric priority setting.\n\nYou must specify a unique priority for each rule group that you associate with a single VPC. To make it easier to insert rule groups later, leave space between the numbers, for example, use 101, 200, and so on. You can change the priority setting for a rule group association after you create it.\n\nThe allowed values for `Priority` are between 100 and 9900 (excluding 100 and 9900).",
            "stability": "external",
            "summary": "The setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 689
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-vpcid"
            },
            "stability": "external",
            "summary": "The unique identifier of the VPC that is associated with the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 696
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-mutationprotection"
            },
            "stability": "external",
            "summary": "If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 703
          },
          "name": "mutationProtection",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-name"
            },
            "stability": "external",
            "summary": "The name of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 710
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-tags"
            },
            "stability": "external",
            "summary": "A list of the tag keys and values that you want to associate with the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 717
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallRuleGroupAssociationProps"
    },
    "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnFirewallRuleGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnFirewallRuleGroupProps: route53resolver.CfnFirewallRuleGroupProps = {\n  firewallRules: [{\n    action: 'action',\n    firewallDomainListId: 'firewallDomainListId',\n    priority: 123,\n\n    // the properties below are optional\n    blockOverrideDnsType: 'blockOverrideDnsType',\n    blockOverrideDomain: 'blockOverrideDomain',\n    blockOverrideTtl: 123,\n    blockResponse: 'blockResponse',\n  }],\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 285
      },
      "name": "CfnFirewallRuleGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-firewallrules"
            },
            "stability": "external",
            "summary": "A list of the rules that you have defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 292
          },
          "name": "firewallRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-route53resolver.CfnFirewallRuleGroup.FirewallRuleProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-name"
            },
            "stability": "external",
            "summary": "The name of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 299
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-tags"
            },
            "stability": "external",
            "summary": "A list of the tag keys and values that you want to associate with the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 306
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnFirewallRuleGroupProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverConfig": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A complex type that contains information about a Resolver configuration for a VPC.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverConfig = new route53resolver.CfnResolverConfig(this, 'MyCfnResolverConfig', {\n  autodefinedReverseFlag: 'autodefinedReverseFlag',\n  resourceId: 'resourceId',\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverConfig`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 1117
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1053
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1135
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1147
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1057
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AutodefinedReverse"
            },
            "remarks": "This is enabled by default.",
            "stability": "external",
            "summary": "The status of whether or not the Route 53 Resolver will create autodefined rules for reverse DNS lookups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1082
          },
          "name": "attrAutodefinedReverse",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "ID for the Route 53 Resolver configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1088
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "stability": "external",
            "summary": "The owner account ID of the Amazon Virtual Private Cloud VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1094
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1140
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html#cfn-route53resolver-resolverconfig-autodefinedreverseflag"
            },
            "remarks": "The only supported value on creation is `DISABLE` . Deletion of this resource will return `AutodefinedReverse` to its default value of `ENABLED` .",
            "stability": "external",
            "summary": "Represents the desired status of `AutodefinedReverse` ."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1101
          },
          "name": "autodefinedReverseFlag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html#cfn-route53resolver-resolverconfig-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon Virtual Private Cloud VPC that you're configuring Resolver for."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1108
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverConfig"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverConfigProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverConfigProps: route53resolver.CfnResolverConfigProps = {\n  autodefinedReverseFlag: 'autodefinedReverseFlag',\n  resourceId: 'resourceId',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 976
      },
      "name": "CfnResolverConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html#cfn-route53resolver-resolverconfig-autodefinedreverseflag"
            },
            "remarks": "The only supported value on creation is `DISABLE` . Deletion of this resource will return `AutodefinedReverse` to its default value of `ENABLED` .",
            "stability": "external",
            "summary": "Represents the desired status of `AutodefinedReverse` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 983
          },
          "name": "autodefinedReverseFlag",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html#cfn-route53resolver-resolverconfig-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon Virtual Private Cloud VPC that you're configuring Resolver for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 990
          },
          "name": "resourceId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverConfigProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfig": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverDNSSECConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::Route53Resolver::ResolverDNSSECConfig` resource is a complex type that contains information about a configuration for DNSSEC validation.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverDNSSECConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverDNSSECConfig = new route53resolver.CfnResolverDNSSECConfig(this, 'MyCfnResolverDNSSECConfig', /* all optional props */ {\n  resourceId: 'resourceId',\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverDNSSECConfig`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 1282
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1225
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1297
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1308
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverDNSSECConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1229
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "remarks": "For example: `rdsc-689d45d1ae623bf3` .",
            "stability": "external",
            "summary": "The primary identifier of this `ResolverDNSSECConfig` resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1254
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "remarks": "For example: `111122223333` .",
            "stability": "external",
            "summary": "The AWS account of the owner."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1260
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ValidationStatus"
            },
            "remarks": "For example: `Enabled` .",
            "stability": "external",
            "summary": "The current status of this `ResolverDNSSECConfig` resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1266
          },
          "name": "attrValidationStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1302
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html#cfn-route53resolver-resolverdnssecconfig-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1273
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverDNSSECConfig"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfigProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverDNSSECConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverDNSSECConfigProps: route53resolver.CfnResolverDNSSECConfigProps = {\n  resourceId: 'resourceId',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverDNSSECConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1160
      },
      "name": "CfnResolverDNSSECConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html#cfn-route53resolver-resolverdnssecconfig-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the virtual private cloud (VPC) that you're configuring the DNSSEC validation status for."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1167
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverDNSSECConfigProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverEndpoint": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverEndpoint",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Creates a Resolver endpoint. There are two types of Resolver endpoints, inbound and outbound:\n\n- An *inbound Resolver endpoint* forwards DNS queries to the DNS service for a VPC from your network.\n- An *outbound Resolver endpoint* forwards DNS queries from the DNS service for a VPC to your network.\n\n> - You cannot update `ResolverEndpointType` and `IpAddresses` in the same request.\n> - When you update a dual-stack IP address, you must update both IP addresses. You can’t update only an IPv4 or IPv6 and keep an existing IP address.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverEndpoint = new route53resolver.CfnResolverEndpoint(this, 'MyCfnResolverEndpoint', {\n  direction: 'direction',\n  ipAddresses: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    ip: 'ip',\n    ipv6: 'ipv6',\n  }],\n  securityGroupIds: ['securityGroupIds'],\n\n  // the properties below are optional\n  name: 'name',\n  outpostArn: 'outpostArn',\n  preferredInstanceType: 'preferredInstanceType',\n  resolverEndpointType: 'resolverEndpointType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverEndpoint",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverEndpoint`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 1617
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1470
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1648
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1666
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverEndpoint",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1474
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resolver endpoint, such as `arn:aws:route53resolver:us-east-1:123456789012:resolver-endpoint/resolver-endpoint-a1bzhi` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1499
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Direction"
            },
            "stability": "external",
            "summary": "Indicates whether the resolver endpoint allows inbound or outbound DNS queries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1505
          },
          "name": "attrDirection",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "HostVPCId"
            },
            "stability": "external",
            "summary": "The ID of the VPC that you want to create the resolver endpoint in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1511
          },
          "name": "attrHostVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "IpAddressCount"
            },
            "stability": "external",
            "summary": "The number of IP addresses that the resolver endpoint can use for DNS queries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1517
          },
          "name": "attrIpAddressCount",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external",
            "summary": "The name that you assigned to the resolver endpoint when you created the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1523
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OutpostArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1529
          },
          "name": "attrOutpostArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PreferredInstanceType"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1535
          },
          "name": "attrPreferredInstanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverEndpointId"
            },
            "stability": "external",
            "summary": "The ID of the resolver endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1541
          },
          "name": "attrResolverEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverEndpointType"
            },
            "remarks": "or dual-stack. A dual-stack endpoint means that it will resolve via both IPv4 and IPv6. If you choose either IPv4 or IPv6, this endpoint type is applied to all IP addresses.",
            "stability": "external",
            "summary": "For the endpoint type you can choose either IPv4, IPv6."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1547
          },
          "name": "attrResolverEndpointType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1653
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags"
            },
            "stability": "external",
            "summary": "Route 53 Resolver doesn't support updating tags through CloudFormation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1608
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction"
            },
            "remarks": "- `INBOUND` : allows DNS queries to your VPC from your network\n- `OUTBOUND` : allows DNS queries from your VPC to your network",
            "stability": "external",
            "summary": "Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1557
          },
          "name": "direction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses"
            },
            "remarks": "The subnet ID uniquely identifies a VPC.\n\n> Even though the minimum is 1, Route 53 requires that you create at least two.",
            "stability": "external",
            "summary": "The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints)."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1566
          },
          "name": "ipAddresses",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53resolver.CfnResolverEndpoint.IpAddressRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids"
            },
            "remarks": "The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.",
            "stability": "external",
            "summary": "The ID of one or more security groups that control access to this VPC."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1573
          },
          "name": "securityGroupIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name"
            },
            "stability": "external",
            "summary": "A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1580
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::Route53Resolver::ResolverEndpoint.OutpostArn`."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1587
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-preferredinstancetype"
            },
            "stability": "external",
            "summary": "`AWS::Route53Resolver::ResolverEndpoint.PreferredInstanceType`."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1594
          },
          "name": "preferredInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-resolverendpointtype"
            },
            "stability": "external",
            "summary": "The Resolver endpoint IP address type."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1601
          },
          "name": "resolverEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverEndpoint"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverEndpoint.IpAddressRequestProperty": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "In a [CreateResolverEndpoint](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html) request, the IP address that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). `IpAddressRequest` also includes the ID of the subnet that contains the IP address.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst ipAddressRequestProperty: route53resolver.CfnResolverEndpoint.IpAddressRequestProperty = {\n  subnetId: 'subnetId',\n\n  // the properties below are optional\n  ip: 'ip',\n  ipv6: 'ipv6',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverEndpoint.IpAddressRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1680
      },
      "name": "IpAddressRequestProperty",
      "namespace": "CfnResolverEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid"
            },
            "stability": "external",
            "summary": "The ID of the subnet that contains the IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1698
          },
          "name": "subnetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip"
            },
            "stability": "external",
            "summary": "The IPv4 address that you want to use for DNS queries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1686
          },
          "name": "ip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ipv6"
            },
            "stability": "external",
            "summary": "The IPv6 address that you want to use for DNS queries."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1692
          },
          "name": "ipv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverEndpoint.IpAddressRequestProperty"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverEndpointProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverEndpoint`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverEndpointProps: route53resolver.CfnResolverEndpointProps = {\n  direction: 'direction',\n  ipAddresses: [{\n    subnetId: 'subnetId',\n\n    // the properties below are optional\n    ip: 'ip',\n    ipv6: 'ipv6',\n  }],\n  securityGroupIds: ['securityGroupIds'],\n\n  // the properties below are optional\n  name: 'name',\n  outpostArn: 'outpostArn',\n  preferredInstanceType: 'preferredInstanceType',\n  resolverEndpointType: 'resolverEndpointType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1321
      },
      "name": "CfnResolverEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction"
            },
            "remarks": "- `INBOUND` : allows DNS queries to your VPC from your network\n- `OUTBOUND` : allows DNS queries from your VPC to your network",
            "stability": "external",
            "summary": "Indicates whether the Resolver endpoint allows inbound or outbound DNS queries:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1331
          },
          "name": "direction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses"
            },
            "remarks": "The subnet ID uniquely identifies a VPC.\n\n> Even though the minimum is 1, Route 53 requires that you create at least two.",
            "stability": "external",
            "summary": "The subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1340
          },
          "name": "ipAddresses",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53resolver.CfnResolverEndpoint.IpAddressRequestProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids"
            },
            "remarks": "The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.",
            "stability": "external",
            "summary": "The ID of one or more security groups that control access to this VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1347
          },
          "name": "securityGroupIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name"
            },
            "stability": "external",
            "summary": "A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1354
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-outpostarn"
            },
            "stability": "external",
            "summary": "`AWS::Route53Resolver::ResolverEndpoint.OutpostArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1361
          },
          "name": "outpostArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-preferredinstancetype"
            },
            "stability": "external",
            "summary": "`AWS::Route53Resolver::ResolverEndpoint.PreferredInstanceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1368
          },
          "name": "preferredInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-resolverendpointtype"
            },
            "stability": "external",
            "summary": "The Resolver endpoint IP address type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1375
          },
          "name": "resolverEndpointType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags"
            },
            "stability": "external",
            "summary": "Route 53 Resolver doesn't support updating tags through CloudFormation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1382
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverEndpointProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfig": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverQueryLoggingConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The AWS::Route53Resolver::ResolverQueryLoggingConfig resource is a complex type that contains settings for one query logging configuration.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverQueryLoggingConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfig = new route53resolver.CfnResolverQueryLoggingConfig(this, 'MyCfnResolverQueryLoggingConfig', /* all optional props */ {\n  destinationArn: 'destinationArn',\n  name: 'name',\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverQueryLoggingConfig`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 1942
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1840
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1963
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1975
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverQueryLoggingConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1844
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1869
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AssociationCount"
            },
            "stability": "external",
            "summary": "The number of VPCs that are associated with the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1875
          },
          "name": "attrAssociationCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1881
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreatorRequestId"
            },
            "remarks": "The `CreatorRequestId` allows failed requests to be retried without the risk of running the operation twice.",
            "stability": "external",
            "summary": "A unique string that identifies the request that created the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1887
          },
          "name": "attrCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID for the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1893
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "OwnerId"
            },
            "stability": "external",
            "summary": "The AWS account ID for the account that created the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1899
          },
          "name": "attrOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ShareStatus"
            },
            "remarks": "Sharing is configured through AWS Resource Access Manager ( AWS RAM ).",
            "stability": "external",
            "summary": "An indication of whether the query logging configuration is shared with other AWS account s, or was shared with the current account by another AWS account ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1905
          },
          "name": "attrShareStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "remarks": "- `CREATING` : Resolver is creating the query logging configuration.\n- `CREATED` : The query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n- `DELETING` : Resolver is deleting this query logging configuration.\n- `FAILED` : Resolver can't deliver logs to the location that is specified in the query logging configuration. Here are two common causes:\n\n- The specified destination (for example, an Amazon S3 bucket) was deleted.\n- Permissions don't allow sending logs to the destination.",
            "stability": "external",
            "summary": "The status of the specified query logging configuration. Valid values include the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1919
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1968
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn"
            },
            "stability": "external",
            "summary": "The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1926
          },
          "name": "destinationArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name"
            },
            "stability": "external",
            "summary": "The name of the query logging configuration."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1933
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverQueryLoggingConfig"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociation": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation resource is a configuration for DNS query logging. After you create a query logging configuration, Amazon Route 53 begins to publish log data to an Amazon CloudWatch Logs log group.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfigAssociation = new route53resolver.CfnResolverQueryLoggingConfigAssociation(this, 'MyCfnResolverQueryLoggingConfigAssociation', /* all optional props */ {\n  resolverQueryLogConfigId: 'resolverQueryLogConfigId',\n  resourceId: 'resourceId',\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 2149
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 2063
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2167
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2179
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverQueryLoggingConfigAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2067
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "CreationTime"
            },
            "stability": "external",
            "summary": "The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2092
          },
          "name": "attrCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Error"
            },
            "remarks": "- `DESTINATION_NOT_FOUND` : The specified destination (for example, an Amazon S3 bucket) was deleted.\n- `ACCESS_DENIED` : Permissions don't allow sending logs to the destination.\n\nIf the value of `Status` is a value other than `FAILED` , `Error` is null.",
            "stability": "external",
            "summary": "If the value of `Status` is `FAILED` , the value of `Error` indicates the cause:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2103
          },
          "name": "attrError",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ErrorMessage"
            },
            "remarks": "If the value or `Error` is null, the value of `ErrorMessage` is also null.",
            "stability": "external",
            "summary": "Contains additional information about the error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2109
          },
          "name": "attrErrorMessage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external",
            "summary": "The ID of the query logging association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2115
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Status"
            },
            "remarks": "- `CREATING` : Resolver is creating an association between an Amazon Virtual Private Cloud (Amazon VPC) and a query logging configuration.\n- `CREATED` : The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.\n- `DELETING` : Resolver is deleting this query logging association.\n- `FAILED` : Resolver either couldn't create or couldn't delete the query logging association.",
            "stability": "external",
            "summary": "The status of the specified query logging association. Valid values include the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2126
          },
          "name": "attrStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2172
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid"
            },
            "stability": "external",
            "summary": "The ID of the query logging configuration that a VPC is associated with."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2133
          },
          "name": "resolverQueryLogConfigId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon VPC that is associated with the query logging configuration."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2140
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverQueryLoggingConfigAssociation"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociationProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverQueryLoggingConfigAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfigAssociationProps: route53resolver.CfnResolverQueryLoggingConfigAssociationProps = {\n  resolverQueryLogConfigId: 'resolverQueryLogConfigId',\n  resourceId: 'resourceId',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1988
      },
      "name": "CfnResolverQueryLoggingConfigAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid"
            },
            "stability": "external",
            "summary": "The ID of the query logging configuration that a VPC is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1995
          },
          "name": "resolverQueryLogConfigId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon VPC that is associated with the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2002
          },
          "name": "resourceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverQueryLoggingConfigAssociationProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverQueryLoggingConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverQueryLoggingConfigProps: route53resolver.CfnResolverQueryLoggingConfigProps = {\n  destinationArn: 'destinationArn',\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverQueryLoggingConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 1765
      },
      "name": "CfnResolverQueryLoggingConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn"
            },
            "stability": "external",
            "summary": "The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1772
          },
          "name": "destinationArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name"
            },
            "stability": "external",
            "summary": "The name of the query logging configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 1779
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverQueryLoggingConfigProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverRule": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverRule",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For DNS queries that originate in your VPCs, specifies which Resolver endpoint the queries pass through, one domain name that you want to forward to your network, and the IP addresses of the DNS resolvers in your network.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRule = new route53resolver.CfnResolverRule(this, 'MyCfnResolverRule', {\n  domainName: 'domainName',\n  ruleType: 'ruleType',\n\n  // the properties below are optional\n  name: 'name',\n  resolverEndpointId: 'resolverEndpointId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetIps: [{\n    ip: 'ip',\n    ipv6: 'ipv6',\n    port: 'port',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverRule`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 2431
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRuleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 2315
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2456
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2472
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverRule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2319
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the resolver rule, such as `arn:aws:route53resolver:us-east-1:123456789012:resolver-rule/resolver-rule-a1bzhi` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2344
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DomainName"
            },
            "remarks": "If a query matches multiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name (www.example.com).",
            "stability": "external",
            "summary": "DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2350
          },
          "name": "attrDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external",
            "summary": "A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2356
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverEndpointId"
            },
            "stability": "external",
            "summary": "The ID of the outbound endpoint that the rule is associated with, such as `rslvr-out-fdc049932dexample` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2362
          },
          "name": "attrResolverEndpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverRuleId"
            },
            "remarks": "This value isn't applicable when `RuleType` is `SYSTEM` .",
            "stability": "external",
            "summary": "When the value of `RuleType` is `FORWARD` , the ID that Resolver assigned to the resolver rule when you created it, such as `rslvr-rr-5328a0899aexample` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2368
          },
          "name": "attrResolverRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "TargetIps"
            },
            "remarks": "This value isn't applicable when `RuleType` is `SYSTEM` .",
            "stability": "external",
            "summary": "When the value of `RuleType` is `FORWARD` , the IP addresses that the outbound endpoint forwards DNS queries to, typically the IP addresses for DNS resolvers on your network."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2374
          },
          "name": "attrTargetIps",
          "type": {
            "fqn": "@aws-cdk/core.IResolvable"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2461
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define.",
            "stability": "external",
            "summary": "Tags help organize and categorize your Resolver rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2415
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname"
            },
            "remarks": "If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).",
            "stability": "external",
            "summary": "DNS queries for this domain name are forwarded to the IP addresses that are specified in `TargetIps` ."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2381
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype"
            },
            "remarks": "When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify `SYSTEM` .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify `FORWARD` for `RuleType` . To then have Resolver process queries for apex.example.com, you create a rule and specify `SYSTEM` for `RuleType` .\n\nCurrently, only Resolver can create rules that have a value of `RECURSIVE` for `RuleType` .",
            "stability": "external",
            "summary": "When you want to forward DNS queries for specified domain name to resolvers on your network, specify `FORWARD` ."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2394
          },
          "name": "ruleType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name"
            },
            "stability": "external",
            "summary": "The name for the Resolver rule, which you specified when you created the Resolver rule."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2401
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid"
            },
            "stability": "external",
            "summary": "The ID of the endpoint that the rule is associated with."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2408
          },
          "name": "resolverEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips"
            },
            "remarks": "Typically, these are the IP addresses of DNS resolvers on your network.",
            "stability": "external",
            "summary": "An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2422
          },
          "name": "targetIps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRule.TargetAddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverRule"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverRule.TargetAddressProperty": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "In a [CreateResolverRule](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html) request, an array of the IPs that you want to forward DNS queries to.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst targetAddressProperty: route53resolver.CfnResolverRule.TargetAddressProperty = {\n  ip: 'ip',\n  ipv6: 'ipv6',\n  port: 'port',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRule.TargetAddressProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 2486
      },
      "name": "TargetAddressProperty",
      "namespace": "CfnResolverRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip"
            },
            "stability": "external",
            "summary": "One IPv4 address that you want to forward DNS queries to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2492
          },
          "name": "ip",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ipv6"
            },
            "stability": "external",
            "summary": "One IPv6 address that you want to forward DNS queries to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2498
          },
          "name": "ipv6",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port"
            },
            "stability": "external",
            "summary": "The port at `Ip` that you want to forward DNS queries to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2504
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverRule.TargetAddressProperty"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverRuleAssociation": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Route53Resolver::ResolverRuleAssociation",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In the response to an [AssociateResolverRule](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html) , [DisassociateResolverRule](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html) , or [ListResolverRuleAssociations](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html) request, provides information about an association between a resolver rule and a VPC. The association determines which DNS queries that originate in the VPC are forwarded to your network.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::Route53Resolver::ResolverRuleAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRuleAssociation = new route53resolver.CfnResolverRuleAssociation(this, 'MyCfnResolverRuleAssociation', {\n  resolverRuleId: 'resolverRuleId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  name: 'name',\n});"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRuleAssociation",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Route53Resolver::ResolverRuleAssociation`."
        },
        "locationInModule": {
          "filename": "lib/route53resolver.generated.ts",
          "line": 2734
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRuleAssociationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 2657
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2754
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2767
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResolverRuleAssociation",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2661
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Name"
            },
            "stability": "external",
            "summary": "The name of an association between a resolver rule and a VPC, such as `test.example.com in beta VPC` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2686
          },
          "name": "attrName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverRuleAssociationId"
            },
            "stability": "external",
            "summary": "The ID of the resolver rule association that you want to get information about, such as `rslvr-rrassoc-97242eaf88example` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2692
          },
          "name": "attrResolverRuleAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ResolverRuleId"
            },
            "stability": "external",
            "summary": "The ID of the resolver rule that you associated with the VPC that is specified by `VPCId` , such as `rslvr-rr-5328a0899example` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2698
          },
          "name": "attrResolverRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VPCId"
            },
            "stability": "external",
            "summary": "The ID of the VPC that you associated the resolver rule with, such as `vpc-03cf94c75cexample` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2704
          },
          "name": "attrVpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2759
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid"
            },
            "stability": "external",
            "summary": "The ID of the Resolver rule that you associated with the VPC that is specified by `VPCId` ."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2711
          },
          "name": "resolverRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC that you associated the Resolver rule with."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2718
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name"
            },
            "stability": "external",
            "summary": "The name of an association between a Resolver rule and a VPC."
          },
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2725
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverRuleAssociation"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverRuleAssociationProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverRuleAssociation`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRuleAssociationProps: route53resolver.CfnResolverRuleAssociationProps = {\n  resolverRuleId: 'resolverRuleId',\n  vpcId: 'vpcId',\n\n  // the properties below are optional\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRuleAssociationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 2570
      },
      "name": "CfnResolverRuleAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid"
            },
            "stability": "external",
            "summary": "The ID of the Resolver rule that you associated with the VPC that is specified by `VPCId` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2577
          },
          "name": "resolverRuleId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the VPC that you associated the Resolver rule with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2584
          },
          "name": "vpcId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name"
            },
            "stability": "external",
            "summary": "The name of an association between a Resolver rule and a VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2591
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverRuleAssociationProps"
    },
    "@aws-cdk/aws-route53resolver.CfnResolverRuleProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnResolverRule`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst cfnResolverRuleProps: route53resolver.CfnResolverRuleProps = {\n  domainName: 'domainName',\n  ruleType: 'ruleType',\n\n  // the properties below are optional\n  name: 'name',\n  resolverEndpointId: 'resolverEndpointId',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  targetIps: [{\n    ip: 'ip',\n    ipv6: 'ipv6',\n    port: 'port',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/route53resolver.generated.ts",
        "line": 2192
      },
      "name": "CfnResolverRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname"
            },
            "remarks": "If a query matches multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name (www.example.com).",
            "stability": "external",
            "summary": "DNS queries for this domain name are forwarded to the IP addresses that are specified in `TargetIps` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2199
          },
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype"
            },
            "remarks": "When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify `SYSTEM` .\n\nFor example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify `FORWARD` for `RuleType` . To then have Resolver process queries for apex.example.com, you create a rule and specify `SYSTEM` for `RuleType` .\n\nCurrently, only Resolver can create rules that have a value of `RECURSIVE` for `RuleType` .",
            "stability": "external",
            "summary": "When you want to forward DNS queries for specified domain name to resolvers on your network, specify `FORWARD` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2212
          },
          "name": "ruleType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name"
            },
            "stability": "external",
            "summary": "The name for the Resolver rule, which you specified when you created the Resolver rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2219
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid"
            },
            "stability": "external",
            "summary": "The ID of the endpoint that the rule is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2226
          },
          "name": "resolverEndpointId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define.",
            "stability": "external",
            "summary": "Tags help organize and categorize your Resolver rules."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2233
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips"
            },
            "remarks": "Typically, these are the IP addresses of DNS resolvers on your network.",
            "stability": "external",
            "summary": "An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/route53resolver.generated.ts",
            "line": 2240
          },
          "name": "targetIps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-route53resolver.CfnResolverRule.TargetAddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/route53resolver.generated:CfnResolverRuleProps"
    },
    "@aws-cdk/aws-route53resolver.DnsBlockResponse": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-route53resolver",
      "docs": {
        "stability": "experimental",
        "summary": "The way that you want DNS Firewall to block the request.",
        "example": "declare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.DnsBlockResponse",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firewall-rule-group.ts",
        "line": 104
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Respond indicating that the query was successful, but no response is available for it."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 109
          },
          "name": "noData",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.DnsBlockResponse"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Respond indicating that the domain name that's in the query doesn't exist."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 117
          },
          "name": "nxDomain",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.DnsBlockResponse"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Provides a custom override response to the query."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 128
          },
          "name": "override",
          "parameters": [
            {
              "docs": {
                "summary": "The custom DNS record to send back in response to the query."
              },
              "name": "domain",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The recommended amount of time for the DNS resolver or web browser to cache the provided override record."
              },
              "name": "ttl",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.DnsBlockResponse"
            }
          },
          "static": true
        }
      ],
      "name": "DnsBlockResponse",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The DNS record's type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 138
          },
          "name": "blockOverrideDnsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The custom DNS record to send back in response to the query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 141
          },
          "name": "blockOverrideDomain",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The recommended amount of time for the DNS resolver or web browser to cache the provided override record."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 147
          },
          "name": "blockOverrideTtl",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The way that you want DNS Firewall to block the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 150
          },
          "name": "blockResponse",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group:DnsBlockResponse"
    },
    "@aws-cdk/aws-route53resolver.DomainsConfig": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Domains configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\nconst domainsConfig: route53resolver.DomainsConfig = {\n  domainFileUrl: 'domainFileUrl',\n  domains: ['domains'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.DomainsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-domain-list.ts",
        "line": 126
      },
      "name": "DomainsConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use `domains`",
            "remarks": "The file must be a text file and must contain\na single domain per line. The content type of the S3 object must be `plain/text`.",
            "stability": "experimental",
            "summary": "The fully qualified URL or URI of the file stored in Amazon S3 that contains the list of domains to import."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 134
          },
          "name": "domainFileUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use `domainFileUrl`",
            "stability": "experimental",
            "summary": "A list of domains."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 141
          },
          "name": "domains",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/firewall-domain-list:DomainsConfig"
    },
    "@aws-cdk/aws-route53resolver.FirewallDomainList": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Domain List.",
        "example": "const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallDomainList",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/firewall-domain-list.ts",
          "line": 210
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallDomainListProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-route53resolver.IFirewallDomainList"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firewall-domain-list.ts",
        "line": 147
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing Firewall Rule Group."
          },
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 151
          },
          "name": "fromFirewallDomainListId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "firewallDomainListId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.IFirewallDomainList"
            }
          },
          "static": true
        }
      ],
      "name": "FirewallDomainList",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN (Amazon Resource Name) of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 164
          },
          "name": "firewallDomainListArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time that the domain list was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 170
          },
          "name": "firewallDomainListCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The creator request ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 176
          },
          "name": "firewallDomainListCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The number of domains in the list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 182
          },
          "name": "firewallDomainListDomainCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ID of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 158
          },
          "name": "firewallDomainListId",
          "overrides": "@aws-cdk/aws-route53resolver.IFirewallDomainList",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "For example, the managed domain list `AWSManagedDomainsMalwareDomainList`\nhas the managed owner name `Route 53 Resolver DNS Firewall`.",
            "stability": "experimental",
            "summary": "The owner of the list, used only for lists that are not managed by you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 190
          },
          "name": "firewallDomainListManagedOwnerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time that the domain list was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 196
          },
          "name": "firewallDomainListModificationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The status of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 202
          },
          "name": "firewallDomainListStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Additional information about the status of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 208
          },
          "name": "firewallDomainListStatusMessage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-domain-list:FirewallDomainList"
    },
    "@aws-cdk/aws-route53resolver.FirewallDomainListProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Firewall Domain List.",
        "example": "const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallDomainListProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-domain-list.ts",
        "line": 23
      },
      "name": "FirewallDomainListProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "A list of domains."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 34
          },
          "name": "domains",
          "type": {
            "fqn": "@aws-cdk/aws-route53resolver.FirewallDomains"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CloudFormation generated name",
            "stability": "experimental",
            "summary": "A name for the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 29
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-domain-list:FirewallDomainListProps"
    },
    "@aws-cdk/aws-route53resolver.FirewallDomains": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-route53resolver",
      "docs": {
        "stability": "experimental",
        "summary": "A list of domains.",
        "example": "const blockList = new route53resolver.FirewallDomainList(this, 'BlockList', {\n  domains: route53resolver.FirewallDomains.fromList(['bad-domain.com', 'bot-domain.net']),\n});\n\nconst s3List = new route53resolver.FirewallDomainList(this, 'S3List', {\n  domains: route53resolver.FirewallDomains.fromS3Url('s3://bucket/prefix/object'),\n});\n\nconst assetList = new route53resolver.FirewallDomainList(this, 'AssetList', {\n  domains: route53resolver.FirewallDomains.fromAsset('/path/to/domains.txt'),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallDomains",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firewall-domain-list.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "remarks": "The file must be a text file (`.txt` extension) and must contain a single\ndomain per line. It will be uploaded to S3.",
            "stability": "experimental",
            "summary": "Firewall domains created from a local disk path to a text file."
          },
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 98
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "path to the text file."
              },
              "name": "assetPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallDomains"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Firewall domains created from a list of domains."
          },
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 46
          },
          "name": "fromList",
          "parameters": [
            {
              "docs": {
                "summary": "the list of domains."
              },
              "name": "list",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallDomains"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The file must be a text file and must contain a single domain per line.\nThe content type of the S3 object must be `plain/text`.",
            "stability": "experimental",
            "summary": "Firewall domains created from a file stored in Amazon S3."
          },
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 87
          },
          "name": "fromS3",
          "parameters": [
            {
              "docs": {
                "summary": "S3 bucket."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "S3 key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallDomains"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The file must be a text file and must contain a single domain per line.\nThe content type of the S3 object must be `plain/text`.",
            "stability": "experimental",
            "summary": "Firewall domains created from the URL of a file stored in Amazon S3."
          },
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 67
          },
          "name": "fromS3Url",
          "parameters": [
            {
              "docs": {
                "summary": "S3 bucket url (s3://bucket/prefix/objet)."
              },
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallDomains"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Binds the domains to a domain list."
          },
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 120
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.DomainsConfig"
            }
          }
        }
      ],
      "name": "FirewallDomains",
      "symbolId": "lib/firewall-domain-list:FirewallDomains"
    },
    "@aws-cdk/aws-route53resolver.FirewallRule": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Rule.",
        "example": "declare const myBlockList: route53resolver.FirewallDomainList;\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\n\nruleGroup.addRule({\n  priority: 10,\n  firewallDomainList: myBlockList,\n  // block and reply with NXDOMAIN\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.nxDomain()),\n});\n\nruleGroup.addRule({\n  priority: 20,\n  firewallDomainList: myBlockList,\n  // block and override DNS response with a custom domain\n  action: route53resolver.FirewallRuleAction.block(route53resolver.DnsBlockResponse.override('amazon.com')),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-rule-group.ts",
        "line": 41
      },
      "name": "FirewallRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The action for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 45
          },
          "name": "action",
          "type": {
            "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The domain list for this rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 50
          },
          "name": "firewallDomainList",
          "type": {
            "fqn": "@aws-cdk/aws-route53resolver.IFirewallDomainList"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This value must be unique within\nthe rule group.",
            "stability": "experimental",
            "summary": "The priority of the rule in the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 56
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group:FirewallRule"
    },
    "@aws-cdk/aws-route53resolver.FirewallRuleAction": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-route53resolver",
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Rule.",
        "example": "declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firewall-rule-group.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Permit the request to go through but send an alert to the logs."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 73
          },
          "name": "alert",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Permit the request to go through."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 66
          },
          "name": "allow",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleAction"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Disallow the request."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 82
          },
          "name": "block",
          "parameters": [
            {
              "docs": {
                "summary": "The way that you want DNS Firewall to block the request."
              },
              "name": "response",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-route53resolver.DnsBlockResponse"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleAction"
            }
          },
          "static": true
        }
      ],
      "name": "FirewallRuleAction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 93
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The way that you want DNS Firewall to block the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 98
          },
          "name": "blockResponse",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-route53resolver.DnsBlockResponse"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group:FirewallRuleAction"
    },
    "@aws-cdk/aws-route53resolver.FirewallRuleGroup": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Rule Group.",
        "example": "declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroup",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/firewall-rule-group.ts",
          "line": 226
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-route53resolver.IFirewallRuleGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firewall-rule-group.ts",
        "line": 156
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing Firewall Rule Group."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 160
          },
          "name": "fromFirewallRuleGroupId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "firewallRuleGroupId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.IFirewallRuleGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a rule to this group."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 251
          },
          "name": "addRule",
          "parameters": [
            {
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-route53resolver.FirewallRule"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Associates this Firewall Rule Group with a VPC."
          },
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 259
          },
          "name": "associate",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociation"
            }
          }
        }
      ],
      "name": "FirewallRuleGroup",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN (Amazon Resource Name) of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 173
          },
          "name": "firewallRuleGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time that the rule group was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 179
          },
          "name": "firewallRuleGroupCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The creator request ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 185
          },
          "name": "firewallRuleGroupCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ID of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 167
          },
          "name": "firewallRuleGroupId",
          "overrides": "@aws-cdk/aws-route53resolver.IFirewallRuleGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time that the rule group was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 191
          },
          "name": "firewallRuleGroupModificationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The AWS account ID for the account that created the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 197
          },
          "name": "firewallRuleGroupOwnerId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The number of rules in the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 203
          },
          "name": "firewallRuleGroupRuleCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 210
          },
          "name": "firewallRuleGroupShareStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The status of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 216
          },
          "name": "firewallRuleGroupStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Additional information about the status of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 222
          },
          "name": "firewallRuleGroupStatusMessage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group:FirewallRuleGroup"
    },
    "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociation": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Rule Group Association.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\ndeclare const firewallRuleGroup: route53resolver.FirewallRuleGroup;\ndeclare const vpc: ec2.Vpc;\nconst firewallRuleGroupAssociation = new route53resolver.FirewallRuleGroupAssociation(this, 'MyFirewallRuleGroupAssociation', {\n  firewallRuleGroup: firewallRuleGroup,\n  priority: 123,\n  vpc: vpc,\n\n  // the properties below are optional\n  mutationProtection: false,\n  name: 'name',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociation",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/firewall-rule-group-association.ts",
          "line": 107
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firewall-rule-group-association.ts",
        "line": 55
      },
      "name": "FirewallRuleGroupAssociation",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN (Amazon Resource Name) of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 60
          },
          "name": "firewallRuleGroupAssociationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time that the association was created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 66
          },
          "name": "firewallRuleGroupAssociationCreationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The creator request ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 72
          },
          "name": "firewallRuleGroupAssociationCreatorRequestId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ID of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 79
          },
          "name": "firewallRuleGroupAssociationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "If you use AWS Firewall Manager to manage your firewallls from DNS Firewall,\nthen this reports Firewall Manager as the managed owner.",
            "stability": "experimental",
            "summary": "The owner of the association, used only for lists that are not managed by you."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 87
          },
          "name": "firewallRuleGroupAssociationManagedOwnerName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The date and time that the association was last modified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 93
          },
          "name": "firewallRuleGroupAssociationModificationTime",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The status of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 99
          },
          "name": "firewallRuleGroupAssociationStatus",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Additional information about the status of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 105
          },
          "name": "firewallRuleGroupAssociationStatusMessage",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group-association:FirewallRuleGroupAssociation"
    },
    "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for a Firewall Rule Group Association.",
        "example": "import * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const ruleGroup: route53resolver.FirewallRuleGroup;\ndeclare const myVpc: ec2.Vpc;\n\nruleGroup.associate('Association', {\n  priority: 101,\n  vpc: myVpc,\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-rule-group-association.ts",
        "line": 10
      },
      "name": "FirewallRuleGroupAssociationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "DNS Firewall filters VPC\ntraffic starting from rule group with the lowest numeric priority setting.\n\nThis value must be greater than 100 and less than 9,000",
            "stability": "experimental",
            "summary": "The setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 34
          },
          "name": "priority",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The VPC that to associate with the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 39
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 18
          },
          "name": "mutationProtection",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CloudFormation generated name",
            "stability": "experimental",
            "summary": "The name of the association."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 25
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group-association:FirewallRuleGroupAssociationOptions"
    },
    "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Firewall Rule Group Association.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as route53resolver from '@aws-cdk/aws-route53resolver';\n\ndeclare const firewallRuleGroup: route53resolver.FirewallRuleGroup;\ndeclare const vpc: ec2.Vpc;\nconst firewallRuleGroupAssociationProps: route53resolver.FirewallRuleGroupAssociationProps = {\n  firewallRuleGroup: firewallRuleGroup,\n  priority: 123,\n  vpc: vpc,\n\n  // the properties below are optional\n  mutationProtection: false,\n  name: 'name',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationProps",
      "interfaces": [
        "@aws-cdk/aws-route53resolver.FirewallRuleGroupAssociationOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-rule-group-association.ts",
        "line": 45
      },
      "name": "FirewallRuleGroupAssociationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The firewall rule group which must be associated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group-association.ts",
            "line": 49
          },
          "name": "firewallRuleGroup",
          "type": {
            "fqn": "@aws-cdk/aws-route53resolver.IFirewallRuleGroup"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group-association:FirewallRuleGroupAssociationProps"
    },
    "@aws-cdk/aws-route53resolver.FirewallRuleGroupProps": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a Firewall Rule Group.",
        "example": "declare const myBlockList: route53resolver.FirewallDomainList;\nnew route53resolver.FirewallRuleGroup(this, 'RuleGroup', {\n  rules: [\n    {\n      priority: 10,\n      firewallDomainList: myBlockList,\n      // block and reply with NODATA\n      action: route53resolver.FirewallRuleAction.block(),\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-route53resolver.FirewallRuleGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-rule-group.ts",
        "line": 22
      },
      "name": "FirewallRuleGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- a CloudFormation generated name",
            "stability": "experimental",
            "summary": "The name of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 28
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no rules",
            "stability": "experimental",
            "summary": "A list of rules for this group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 35
          },
          "name": "rules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-route53resolver.FirewallRule"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group:FirewallRuleGroupProps"
    },
    "@aws-cdk/aws-route53resolver.IFirewallDomainList": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Domain List."
      },
      "fqn": "@aws-cdk/aws-route53resolver.IFirewallDomainList",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-domain-list.ts",
        "line": 11
      },
      "name": "IFirewallDomainList",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ID of the domain list."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-domain-list.ts",
            "line": 17
          },
          "name": "firewallDomainListId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-domain-list:IFirewallDomainList"
    },
    "@aws-cdk/aws-route53resolver.IFirewallRuleGroup": {
      "assembly": "@aws-cdk/aws-route53resolver",
      "docs": {
        "stability": "experimental",
        "summary": "A Firewall Rule Group."
      },
      "fqn": "@aws-cdk/aws-route53resolver.IFirewallRuleGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firewall-rule-group.ts",
        "line": 10
      },
      "name": "IFirewallRuleGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ID of the rule group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firewall-rule-group.ts",
            "line": 16
          },
          "name": "firewallRuleGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/firewall-rule-group:IFirewallRuleGroup"
    }
  },
  "version": "1.204.0",
  "fingerprint": "**********"
}